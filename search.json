[{"path":"/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Code of Conduct","title":"Code of Conduct","text":"contributors maintainers project, pledge follow Contributor Covenant interactions others. value open welcoming environment everyone feels respected heard.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Code of Conduct","text":"Examples behavior contributes creating positive environment include: respectful considerate differing viewpoints. Using welcoming inclusive language. Focusing best community. Showing empathy towards community members. Examples unacceptable behavior include: Harassment, trolling, derogatory comments. Personal attacks insults. form discrimination.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Code of Conduct","text":"Project maintainers responsible clarifying enforcing standards behavior. right responsibility remove, edit, reject comments, commits, code, issues, contributions aligned Code Conduct.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team. project team review address reported issues promptly.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Code of Conduct","text":"Code Conduct adapted Contributor Covenant.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to shinyGovstyle","title":"Contributing to shinyGovstyle","text":"Ideas shinyGovstyle first raised GitHub issue anyone free write code create pull request review. support information package development R, recommend using R Packages (2e) guide Hadley Wickham Jennifer Bryan, contains wealth information best practice kinds activities around package development R.","code":""},{"path":"/CONTRIBUTING.html","id":"raising-new-changes","dir":"","previous_headings":"","what":"Raising new changes","title":"Contributing to shinyGovstyle","text":"New changes made branch latest version master branch. don’t access push repo , start creating fork repository. ’ll able make new branch repo push suggested changes . ready, raise PR main GitHub repository, pointing master branch one package maintainers able review changes. pull request reviewed ready merged , commits PR squashed part merge keep Git history shorter easier navigate. master branch acts development version package users, releases stable package versions CRAN made maintainers feel appropriate .","code":""},{"path":"/CONTRIBUTING.html","id":"code-owners","dir":"","previous_headings":"Raising new changes","what":"Code owners","title":"Contributing to shinyGovstyle","text":"make use GitHub’s CODEOWNERS file set default reviewers repo specific parts code.","code":""},{"path":"/CONTRIBUTING.html","id":"css-changes","dir":"","previous_headings":"","what":"CSS changes","title":"Contributing to shinyGovstyle","text":"changes made main inst/www/css/govuk-frontend-norem.css file logged css_changes.md file, way can easily reapplied whenever CSS assests GOV.UK updated. Alternatively, can start separate CSS file styling separate GOV.UK styling.","code":""},{"path":"/CONTRIBUTING.html","id":"updating-to-latest-govuk-frontend-version","dir":"","previous_headings":"","what":"Updating to latest GOV.UK Frontend version","title":"Contributing to shinyGovstyle","text":"Currently take static precompiled exports GOV.UK Frontend files, store inst/ directory. Usual steps involved: Locate latest (desired) GOV.UK Frontend version GitHub Download unzip ZIP folder, copying assets (including fonts images) inst/www/ folder Update CSS file name attachDependency.R script Apply changes css_changes.md manually, preserve previous edits Test code functions expected using devtools::check() Manually test examples using shinyGovstyle::run_example(), ensuring styling expected unsure styling expected appearance, use GOV.UK Design System site explore components detail official guidance use.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to shinyGovstyle","text":"Please note shinyGovstyle project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"/PULL_REQUEST_TEMPLATE.html","id":"pr-checklist","dir":"","previous_headings":"","what":"PR Checklist","title":"NA","text":"updated documentation (needed) added updated tests changes (applicable) tested changes locally using devtools::check()","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ross Wyatt. Author, maintainer. Cameron Race. Contributor. Sarah Wong. Contributor. Richard Bielby. Contributor. Charlotte Foster. Contributor. Jeni Martin. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wyatt R (2025). shinyGovstyle: Custom Gov Style Inputs Shiny. R package version 0.1.0.9000, https://github.com/moj-analytical-services/shinyGovstyle.","code":"@Manual{,   title = {shinyGovstyle: Custom Gov Style Inputs for Shiny},   author = {Ross Wyatt},   year = {2025},   note = {R package version 0.1.0.9000},   url = {https://github.com/moj-analytical-services/shinyGovstyle}, }"},{"path":"/index.html","id":"shinygovstyle-","dir":"","previous_headings":"","what":"Custom Gov Style Inputs for Shiny","title":"Custom Gov Style Inputs for Shiny","text":"Apply Gov styled components formats shiny","code":""},{"path":"/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Custom Gov Style Inputs for Shiny","text":"package provides custom widgets style R Shiny apps using GOV.UK design system. components can previewed example showcase app. view details advice use GOV.UK components please visit https://design-system.service.gov.uk/components/, components available use package.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"Overview","what":"Installation","title":"Custom Gov Style Inputs for Shiny","text":"can install latest stable version CRAN want make use development version install directly GitHub. also available conda use error word count elements need load useShinyjs shinyjs ui.R file","code":"install.packages(\"shinyGovstyle\") remotes::install_github(\"dfe-analytical-services/shinyGovstyle\") conda install r-shinygovstyle shinyjs::useShinyjs()"},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"Overview","what":"Contributing","title":"Custom Gov Style Inputs for Shiny","text":"Ideas, bug reports, requests new components raised GitHub issue. ’s often worth checking existing issues log incase already existing discussion can conrtibute . details contributing can found CONTRIBUTING.md file. package also released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"/index.html","id":"available-components","dir":"","previous_headings":"Overview","what":"Available components","title":"Custom Gov Style Inputs for Shiny","text":"package contains example showcase app can view run , showcasing available components. code example app inst/example_app/ folder. can easily run app console using: Full list available components: Gov style layout Banner Contents links Header text Radio button Checkbox Button Select Date File input Text input Text area input Warning Insert text Value box Details Panel Notification Banner Accordion Table Tabs Summary List Cookie Banner Skip main Tags Errors External links Downloads","code":"shinyGovstyle::run_example()"},{"path":"/index.html","id":"gov-style-layout","dir":"","previous_headings":"Overview > Available components","what":"Gov style layout","title":"Custom Gov Style Inputs for Shiny","text":"Create gov style look page header, footer, font layout: Note: can use gov.uk font service.gov.uk (see https://design-system.service.gov.uk/styles/typography/) want plain footer can setting full = FALSE. example: look like:","code":"ui <- fluidPage(   #font(),   shinyGovstyle::header(\"Justice\", \"Prototype\", logo=\"shinyGovstyle/images/moj_logo.png\"),   gov_layout(size = \"full\",         tags$br(),         tags$br(),         tags$br(),         tags$br(),         tags$br()       ),   footer(TRUE) )  server <- function(input, output, session) {} ui <- fluidPage(   shinyGovstyle::header(\"Justice\", \"Prototype\", logo=\"shinyGovstyle/images/moj_logo.png\"),   gov_layout(size = \"full\",         tags$br(),         tags$br(),         tags$br(),         tags$br(),         tags$br()       ),   footer(FALSE) )"},{"path":"/index.html","id":"banner","dir":"","previous_headings":"Overview > Available components","what":"Banner","title":"Custom Gov Style Inputs for Shiny","text":"Add banner header state beta alpha :","code":"ui <- fluidPage(   shinyGovstyle::header(\"Justice\", \"Prototype\", logo=\"shinyGovstyle/images/moj_logo.png\"),   banner(\"banner\", \"beta\", 'This is a new service – your <a class=\"govuk-link\" href=\"#\">feedback<\/a> will help us to improve it.'),   gov_layout(size = \"full\",         tags$br(),         tags$br(),         tags$br(),         tags$br(),         tags$br()       ),   footer(TRUE) )  server <- function(input, output, session) {}"},{"path":"/index.html","id":"contents-links","dir":"","previous_headings":"Overview > Available components","what":"Contents links","title":"Custom Gov Style Inputs for Shiny","text":"Create contents subcontents links sidebar navigate page.  Important: contents_link() requires following UI structure enable js work relies IDs section point users focus . can also found run_example(): can create content links without subcontents links: subcontents links: use subcontents_text_list without specifying subcontents_id_list subcontents links automatically link shinyGovstyle::heading_text() elements header label matches subcontents_text_list label. Use subcontents_id_list link subcontents link shinyGovstyle::heading_text() custom id argument. order needs match subcontents_text_list. Add NA vector subcontents links still want use automatic link id . Contents links need shiny::observeEvent() server switch tabset panels. Subcontents links work automatically need shiny::observeEvent() server.","code":"shiny::fluidpage(   shinygovstyle::header(     main_text = \"example\",     secondary_text = \"user examples\",     logo = \"shinygovstyle/images/moj_logo.png\"   ),   gov_row(     shiny::column(       width = 3,       id = \"nav\", # DO NOT REMOVE ID       shiny::tags$div(         id = \"govuk-contents-box\", # DO NOT REMOVE ID        class = \"govuk-contents-box\",  # DO NOT REMOVE CLASS         shiny::tags$h2(\"contents\"),          # CONTENTS LINKS GO HERE         )       ),       shiny::column(         width = 9,         id = \"main-col\", # DO NOT REMOVE ID         shiny::tabsetpanel(         type = \"hidden\",         id = \"tab-container\", # DO NOT REMOVE ID          # TAB PANELS GO HERE         )       )   ) ) contents_link(   link_text = \"Cookies\",   input_id = \"cookies_button\") contents_link(   link_text = \"Feedback types\",   input_id = \"feedback_types_button\",   subcontents_text_list =  c(\"tag_Input\", \"details\")) contents_link(   link_text = \"Tables, tabs and accordions\",   input_id = \"tables_tabs_and_accordions_button\",   subcontents_text_list = c(\"govTable\", \"govTabs\", \"button_Input\"),   subcontents_id_list = c(NA, NA, \"button_input_tables_tabs_accordions\") ) ui <- shiny::fluidPage(   shinyGovstyle::header(     main_text = \"Example\",     secondary_text = \"User Examples\",     logo = \"shinyGovstyle/images/moj_logo.png\"   ),   gov_row(     shiny::column(       width = 3,       id = \"nav\", # DO NOT REMOVE ID        shiny::tags$div( # DO NOT REMOVE DIV         shiny::tags$h2(\"Contents\"),         contents_link(           \"Tables, tabs and accordions\",           \"tables_tabs_and_accordions_button\",         ),         contents_link(\"Feedback types\", \"feedback_types_button\"),       )     ),     shiny::column(       width = 9,       id = \"main_col\", # DO NOT REMOVE ID       shiny::tabsetPanel(         type = \"hidden\",         id = \"tab-container\", # DO NOT REMOVE ID          shiny::tabPanel(           \"Tables, tabs and accordions\",           value = \"tables_tabs_and_accordions\",           gov_layout(size = \"Tables, tabs and accordions\",                      heading_text(\"Tables, tabs and accordions\", size = \"l\"))         ),          shiny::tabPanel(           \"Feedback Types\",           value = \"feedback_types\",           gov_layout(size = \"two-thirds\",                      heading_text(\"Feedback types\", size = \"l\"))         ),       )      )   ) )  server <- function(input, output, session) {   shiny::observeEvent(input$tables_tabs_and_accordions_button, {     shiny::updateTabsetPanel(session, \"tab-container\", selected = \"tables_tabs_and_accordions\")   })    shiny::observeEvent(input$feedback_types_button, {     shiny::updateTabsetPanel(session, \"tab-container\", selected = \"feedback_types\")   })  } shiny::shinyApp(ui = ui, server = server) }"},{"path":"/index.html","id":"heading-text","dir":"","previous_headings":"Overview > Available components","what":"Heading text","title":"Custom Gov Style Inputs for Shiny","text":"Use heading text create headings.  can adjust text size setting size ‘xl’, ‘l’, ‘m’, ‘s’. size defaults ‘xl’. can use id create custom id link subcontents_id_list shinyGovstyle::contents_link. can helpful identically named headings.","code":"heading_text(text_input = \"I am the default extra large text\", size = \"xl\"), heading_text(text_input = \"I am large text\", size = \"l\"), heading_text(text_input = \"I am medium text\", size = \"m\"), heading_text(text_input = \"I am small text\", size = \"s\") heading_text(text_input = \"I am the default extra large text\", id = \"custom_id\")"},{"path":"/index.html","id":"radio-button","dir":"","previous_headings":"Overview > Available components","what":"Radio button","title":"Custom Gov Style Inputs for Shiny","text":"Create gov style radio button :","code":"radio_button_Input(inputId = \"name_changed\", label = \"Have you changed your name?\",                    choices= c(\"Yes\", \"No\"), inline = TRUE,                    hint_label = \"This includes changing your last name or spelling your name differently.\")"},{"path":"/index.html","id":"checkbox","dir":"","previous_headings":"Overview > Available components","what":"Checkbox","title":"Custom Gov Style Inputs for Shiny","text":"Turn checkboxes gov style ones : Note currently access values separately inputIds supply values main inputID.","code":"checkbox_Input(   inputId = \"checkID\",    cb_labels = c(\"Waste from animal carcasses\", \"Waste from mines or quarries\", \"Farm or agricultural waste\"),   checkboxIds = c(\"op1\", \"op2\", \"op3\"),   label = \"Which types of waste do you transport?\",   hint_label = \"Select all that apply.\")"},{"path":"/index.html","id":"button","dir":"","previous_headings":"Overview > Available components","what":"Button","title":"Custom Gov Style Inputs for Shiny","text":"Gov style button different styles :","code":"shinyGovstyle::button_Input(inputId = \"btn1\", label = \"default\"), shinyGovstyle::button_Input(inputId = \"btn1\", label = \"start\", type = \"start\"), shinyGovstyle::button_Input(inputId = \"btn1\", label = \"secondary\", type = \"secondary\"), shinyGovstyle::button_Input(inputId = \"btn1\", label = \"warning\", type = \"warning\")"},{"path":"/index.html","id":"select","dir":"","previous_headings":"Overview > Available components","what":"Select","title":"Custom Gov Style Inputs for Shiny","text":"Gov style drop select :","code":"shinyGovstyle::select_Input(   inputId = \"sorter\",    label = \"Sort by\",   select_text = c(\"Recently published\", \"Recently updated\", \"Most views\", \"Most comments\"),   select_value = c(\"published\", \"updated\", \"view\", \"comments\"))"},{"path":"/index.html","id":"date","dir":"","previous_headings":"Overview > Available components","what":"Date","title":"Custom Gov Style Inputs for Shiny","text":"Gov style date input Note currently access individual values adding affix _day, _month _year full date dd/mm/yy using inputID.","code":"date_Input(   inputId = \"date1\",   label = \"What is your date of birth?\",   hint_label = \"For example, 31 3 1980\")"},{"path":"/index.html","id":"file-input","dir":"","previous_headings":"Overview > Available components","what":"File input","title":"Custom Gov Style Inputs for Shiny","text":"Gov style file input component","code":"file_Input(inputId = \"file1\", label = \"Upload a file\")"},{"path":"/index.html","id":"text-input","dir":"","previous_headings":"Overview > Available components","what":"Text input","title":"Custom Gov Style Inputs for Shiny","text":"Gov style text input component","code":"text_Input(inputId = \"txt1\", label = \"Event name\")"},{"path":"/index.html","id":"text-area-input","dir":"","previous_headings":"Overview > Available components","what":"Text area input","title":"Custom Gov Style Inputs for Shiny","text":"Gov style text area input component can also add word count options, requires additional argument server :","code":"text_area_Input(   inputId = \"text_area\",   label = \"Can you provide more detail?\",   hint_label = \"Do not include personal or financial information, like your National Insurance number or credit card details.\") ui <- fluidPage(   shinyjs::useShinyjs(),   shinyGovstyle::header(\"Justice\", \"\", logo=\"shinyGovstyle/images/moj_logo.png\"),   gov_layout(size = \"full\",         text_area_Input(           inputId = \"text_area\",           label = \"Can you provide more detail?\",           hint_label =  \"Do not include personal or financial information, like                           your National Insurance number or credit card details.\",           word_limit = 300)   ),   footer(TRUE) )  # Define server logic required to draw a histogram server <- function(input, output, session) {   observeEvent(input$text_area,     word_count(inputId = \"text_area\", input = input$text_area, word_limit = 300)   ) }"},{"path":"/index.html","id":"warning","dir":"","previous_headings":"Overview > Available components","what":"Warning","title":"Custom Gov Style Inputs for Shiny","text":"Gov style warning component","code":"warning_text(inputId = \"warn\", text = \"You can be fined up to £5,000 if you do not register.\")"},{"path":"/index.html","id":"insert-text","dir":"","previous_headings":"Overview > Available components","what":"Insert text","title":"Custom Gov Style Inputs for Shiny","text":"Gov style insert text component","code":"insert_text(inputId = \"insertId\",             text = \"It can take up to 8 weeks to register a lasting power of attorney                      if there are no mistakes in the application.\")"},{"path":"/index.html","id":"value-box","dir":"","previous_headings":"Overview > Available components","what":"Value box","title":"Custom Gov Style Inputs for Shiny","text":"Gov style value box component","code":"value_text(   value = \"1,000,000\",   text = \"This is the latest value for the selected inputs.\",   colour = \"purple\" )"},{"path":"/index.html","id":"details","dir":"","previous_headings":"Overview > Available components","what":"Details","title":"Custom Gov Style Inputs for Shiny","text":"Gov style details component","code":"details(   inputId = \"detID\",   label = \"Help with nationality\",   help_text = \"We need to know your nationality so we can work out which elections you’re                entitled to vote in. If you cannot provide your nationality, you’ll have to                send copies of identity documents through the post.\")"},{"path":"/index.html","id":"panel","dir":"","previous_headings":"Overview > Available components","what":"Panel","title":"Custom Gov Style Inputs for Shiny","text":"Gov style panel component","code":"panel_output(   inputId = \"panId\",    main_text = \"Application complete\",    sub_text = \"Your reference number <br> <strong>HDJ2123F<\/strong>\")"},{"path":"/index.html","id":"notification-banner","dir":"","previous_headings":"Overview > Available components","what":"Notification Banner","title":"Custom Gov Style Inputs for Shiny","text":"Gov style panel component","code":"noti_banner(   \"notId\",   title_txt = \"Important\",   body_txt = Example text,   type = \"standard\" )"},{"path":"/index.html","id":"accordion","dir":"","previous_headings":"Overview > Available components","what":"Accordion","title":"Custom Gov Style Inputs for Shiny","text":"Gov style accordion component","code":"accordion(       \"acc1\",       c(\"Writing well for the web\",         \"Writing well for specialists\",         \"Know your audience\",         \"How people read\"        ),       c(\"This is the content for Writing well for the web.\",         \"This is the content for Writing well for specialists.\",         \"This is the content for Know your audience.\",         \"This is the content for How people read.\"        ))"},{"path":"/index.html","id":"table","dir":"","previous_headings":"Overview > Available components","what":"Table","title":"Custom Gov Style Inputs for Shiny","text":"Gov style table component Note: widths specified col_widths must add 1.","code":"Months <- rep(c(\"January\", \"February\", \"March\", \"April\", \"May\"), times = 2) Colours <- rep(c(\"Red\", \"Blue\"), times = 5) Bikes <- c(85, 75, 165, 90, 80, 95, 85, 175, 100, 95) Cars <- c(95, 55, 125, 110, 70, 120, 60, 130, 115, 90) Vans <- c(150, 130, 180, 160, 140, 175, 135, 185, 155, 145) Buses <- c(200, 180, 220, 210, 190, 215, 185, 225, 205, 195) example_data <- data.frame(Months, Colours, Bikes, Cars, Vans, Buses)        shinyGovstyle::govTable(       \"tab1\", example_data, \"Test\", \"l\",       right_col = c(\"Colours\", \"Bikes\", \"Cars\", \"Vans\", \"Buses\"),       col_widths = list(Months = \"one-third\"),       page_size = 5       )"},{"path":"/index.html","id":"tabs","dir":"","previous_headings":"Overview > Available components","what":"Tabs","title":"Custom Gov Style Inputs for Shiny","text":"Gov style tabs component","code":"# Create an example dataset   tabs <- c(rep(\"Past Day\", 3),             rep(\"Past Week\", 3),             rep(\"Past Month\", 3),             rep(\"Past Year\", 3))   Case_manager <- rep(c(\"David Francis\", \"Paul Farmer\", \"Rita Patel\"),4)   Cases_open <- c(3, 1, 2, 24, 16, 24, 98, 122, 126, 1380, 1129, 1539)   Cases_closed <- c(0, 0, 0, 18, 20, 27, 95, 131, 142, 1472, 1083, 1265)   data <- data.frame(tabs, Case_manager, Cases_open, Cases_closed)    ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::govTabs(\"tabsID\", data, \"tabs\")),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server)"},{"path":"/index.html","id":"summary-list","dir":"","previous_headings":"Overview > Available components","what":"Summary List","title":"Custom Gov Style Inputs for Shiny","text":"Gov style summary list","code":"# Create an example dataset   headers <- c(\"Name\", \"Date of birth\", \"Contact information\", \"Contact details\")   info <- c(     \"Sarah Philips\",     \"5 January 1978\",     \"72 Guild Street <br> London <br> SE23 6FH\",     \"07700 900457 <br> sarah.phillips@example.com\")    ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::gov_summary(\"sumID\", headers, info, action = TRUE)),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server)"},{"path":"/index.html","id":"cookie-banner","dir":"","previous_headings":"Overview > Available components","what":"Cookie Banner","title":"Custom Gov Style Inputs for Shiny","text":"Gov style cookie banner","code":"ui <- fluidPage(   shinyGovstyle::header(     main_text = \"Example\",     secondary_text = \"User Examples\",     logo=\"shinyGovstyle/images/moj_logo.png\"),   #Needs shinyjs to work   shinyjs::useShinyjs(),   shinyGovstyle::cookieBanner(\"The best thing\"),   shinyGovstyle::gov_layout(size = \"two-thirds\"),   shinyGovstyle::footer(full = TRUE) )  server <- function(input, output, session) {    #Need these set of observeEvent to create a path through the cookie banner   observeEvent(input$cookieAccept, {     shinyjs::show(id = \"cookieAcceptDiv\")     shinyjs::hide(id = \"cookieMain\")   })    observeEvent(input$cookieReject, {     shinyjs::show(id = \"cookieRejectDiv\")     shinyjs::hide(id = \"cookieMain\")   })    observeEvent(input$hideAccept, {     shinyjs::toggle(id = \"cookieDiv\")   })    observeEvent(input$hideReject, {     shinyjs::toggle(id = \"cookieDiv\")   })    observeEvent(input$cookieLink, {     #Need to link here to where further info is located.  You can     #updateTabsetPanel to have a cookie page for instance   })  } shinyApp(ui = ui, server = server)"},{"path":"/index.html","id":"skip-to-main","dir":"","previous_headings":"Overview > Available components","what":"Skip to main","title":"Custom Gov Style Inputs for Shiny","text":"Add accessible ‘Skip main content’ link typically used keyboard-users bypass content navigate directly main content page. visible users ‘tabbing’ feature, otherwise hidden:  Important: main column need id “main_col” work feature generally positioned cookie banner header. See example :","code":"ui <- fluidPage(   cookieBanner(\"Run Example\"),   skip_to_main(),   shinyGovstyle::header(     main_text = \"Example\",     secondary_text = \"User Examples\",     logo=\"shinyGovstyle/images/moj_logo.png\"   ),   shinyjs::useShinyjs(),  # shinyjs is needed to manage visibility of elements   gov_row(     shiny::column(       width = 3,       id = \"nav\",              # Contents box       shiny::tags$div(         id = \"govuk-contents-box\", #DO NOT REMOVE ID         class = \"govuk-contents-box\",  #DO NOT REMOVE CLASS         shiny::tags$h2(\"Contents\"),         p(\"Your contents links go here\"),       )     ),          shiny::column(       width = 9,       id = \"main_col\",       shiny::tabsetPanel(         type = \"hidden\",         id = \"tab-container\", # DO NOT REMOVE ID         shiny::tabPanel(           \"Your main content\",           value = \"your_main_content\",           gov_layout(             size = \"two-thirds\",             heading_text(\"Your main content\", size = \"l\"),             p(\"Your main content goes here\")                        )         )       )     )        ) ) server <- function(input, output, session){ } shinyApp(ui = ui, server = server)"},{"path":"/index.html","id":"tags","dir":"","previous_headings":"Overview > Available components","what":"Tags","title":"Custom Gov Style Inputs for Shiny","text":"Add gov style tag component","code":"tag_Input(inputId = \"tag1\", text = \"Default\"), tag_Input(inputId = \"tag2\", text = \"Grey\", colour = \"grey\"), tag_Input(inputId = \"tag3\", text = \"Green\", colour = \"green\"), tag_Input(inputId = \"tag4\", text = \"Turquoise\", colour = \"turquoise\"), tag_Input(inputId = \"tag5\", text = \"Blue\", colour = \"blue\"), tag_Input(inputId = \"tag6\", text = \"Light-blue\", colour = \"light-blue\"), tag_Input(inputId = \"tag7\", text = \"Purple\", colour = \"purple\"), tag_Input(inputId = \"tag8\", text = \"Pink\", colour = \"pink\"), tag_Input(inputId = \"tag9\", text = \"Red\", colour = \"red\"), tag_Input(inputId = \"tag10\", text = \"Orange\", colour = \"orange\"), tag_Input(inputId = \"tag11\", text = \"Yellow\", colour = \"yellow\")"},{"path":"/index.html","id":"errors","dir":"","previous_headings":"Overview > Available components","what":"Errors","title":"Custom Gov Style Inputs for Shiny","text":"Add errors components filled correctly. input components option add","code":"ui <- fluidPage(   shinyjs::useShinyjs(),   shinyGovstyle::header(\"Justice\", \"\", logo=\"shinyGovstyle/images/moj_logo.png\"),   gov_layout(size = \"full\",         text_area_Input(           \"text_area\",           \"Can you provide more detail?\",           \"Do not include personal or financial information, like your National Insurance number or credit card details.\",           word_limit = 300, error = TRUE, error_message = \"Error\"),          button_Input(\"btn1\", \"Toggle error\")   ),   footer(TRUE) )  server <- function(input, output, session) {   err <<- FALSE   observeEvent(input$btn1,{     if (err) {       err <<- FALSE       error_off(\"text_area\")     }     else {       err <<- TRUE       error_on(\"text_area\", \"You have an error\")     }   }   ) }"},{"path":"/index.html","id":"external-links","dir":"","previous_headings":"Overview > Available components","what":"External links","title":"Custom Gov Style Inputs for Shiny","text":"Safely make links external sites open new tabs using external_link() function:","code":"shinyGovstyle::external_link(\"https://shiny.posit.co/\", \"R Shiny\")"},{"path":"/index.html","id":"downloads","dir":"","previous_headings":"Overview > Available components","what":"Downloads","title":"Custom Gov Style Inputs for Shiny","text":"Downloads clearly sign-posted file type file size. help standardise GDS style, use download_link(), download_button() download_radios() following examples provided reference pages.","code":""},{"path":"/reference/accordion.html","id":null,"dir":"Reference","previous_headings":"","what":"Accordion Function — accordion","title":"Accordion Function — accordion","text":"function inserts accordion","code":""},{"path":"/reference/accordion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accordion Function — accordion","text":"","code":"accordion(inputId, titles, descriptions)"},{"path":"/reference/accordion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Accordion Function — accordion","text":"inputId Input id accordion titles Add titles accordion descriptions Add main text accordion","code":""},{"path":"/reference/accordion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accordion Function — accordion","text":"accordion html shiny object","code":""},{"path":"/reference/accordion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accordion Function — accordion","text":"","code":"if (interactive()) {    ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", 'This is a new service'),     shinyGovstyle::gov_layout(size = \"two-thirds\",     accordion(       \"acc1\",       c(\"Writing well for the web\",         \"Writing well for specialists\",         \"Know your audience\",         \"How people read\"        ),       c(\"This is the content for Writing well for the web.\",         \"This is the content for Writing well for specialists.\",         \"This is the content for Know your audience.\",         \"This is the content for How people read.\"        ))),      shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}    shinyApp(ui = ui, server = server) }"},{"path":"/reference/backlink_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Back Link Function — backlink_Input","title":"Back Link Function — backlink_Input","text":"function adds back link page","code":""},{"path":"/reference/backlink_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Back Link Function — backlink_Input","text":"","code":"backlink_Input(inputId, label = \"Back\")"},{"path":"/reference/backlink_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Back Link Function — backlink_Input","text":"inputId input slot used access value. label link text backlink, default \"Back\"","code":""},{"path":"/reference/backlink_Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Back Link Function — backlink_Input","text":"backlink html shiny object","code":""},{"path":"/reference/backlink_Input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Back Link Function — backlink_Input","text":"","code":"if (interactive()) {   ui <- fluidPage(     header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shiny::navlistPanel(       \"\",       id=\"nav\",       widths = c(2, 10),       well = FALSE,        #Create first panel       shiny::tabPanel(         \"Select Types\",         value = \"panel1\",         gov_layout(size = \"two-thirds\",           backlink_Input(\"link1\"),           shiny::tags$br(), shiny::tags$br()        )),        shiny::tabPanel(          \"Tab2\",          value = \"panel2\")),    shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {     #Slightly confused in that it goes forward rather than back, but shows how     #to use     observeEvent(input$link1,{       updateTabsetPanel(session, \"nav\", selected = \"panel2\")     })   }   shinyApp(ui = ui, server = server) }"},{"path":"/reference/bad_link_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup for bad link text — bad_link_text","title":"Lookup for bad link text — bad_link_text","text":"single column data frame, listing known examples bad link text check `external_link()` function.","code":""},{"path":"/reference/bad_link_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup for bad link text — bad_link_text","text":"","code":"bad_link_text"},{"path":"/reference/bad_link_text.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lookup for bad link text — bad_link_text","text":"## `bad_link_text` data frame 53 rows 1 columns: bad_link_text Lower cased examples non-descriptive link text","code":""},{"path":"/reference/bad_link_text.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lookup for bad link text — bad_link_text","text":"Curated explore.statistics@education.gov.uk","code":""},{"path":"/reference/bad_link_text.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lookup for bad link text — bad_link_text","text":"started curating list can create automated checks help link text descriptive possible line [WCAG 2.2 success criteria 2.4.4: Link Purpose (Context)]( https://www.w3.org/WAI/WCAG22/Understanding/link-purpose--context).","code":""},{"path":"/reference/banner.html","id":null,"dir":"Reference","previous_headings":"","what":"Banner Function — banner","title":"Banner Function — banner","text":"function create detail component can click details.","code":""},{"path":"/reference/banner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Banner Function — banner","text":"","code":"banner(inputId, type, label)"},{"path":"/reference/banner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Banner Function — banner","text":"inputId input slot used access value. type Main type label e.g. alpha beta.  Can word. label test display.","code":""},{"path":"/reference/banner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Banner Function — banner","text":"banner html shiny object","code":""},{"path":"/reference/banner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Banner Function — banner","text":"","code":"if (interactive()) {    ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::banner(       inputId = \"banner\", type = \"Beta\", 'This is a new service')   )    server <- function(input, output, session) {}    shinyApp(ui = ui, server = server) }"},{"path":"/reference/button_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Button Function — button_Input","title":"Button Function — button_Input","text":"function create gov style button","code":""},{"path":"/reference/button_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Button Function — button_Input","text":"","code":"button_Input(inputId, label, type = \"default\")"},{"path":"/reference/button_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Button Function — button_Input","text":"inputId input slot used access value. label Display label control, NULL label. type type button.  Options default, start, secondary warning.  Defaults default.","code":""},{"path":"/reference/button_Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Button Function — button_Input","text":"html button shiny object","code":""},{"path":"/reference/button_Input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Button Function — button_Input","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::button_Input(         inputId = \"btn1\",         label = \"Continue\",         type = \"default\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/checkbox_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Checkbox Function — checkbox_Input","title":"Checkbox Function — checkbox_Input","text":"function inserts checkbox group","code":""},{"path":"/reference/checkbox_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checkbox Function — checkbox_Input","text":"","code":"checkbox_Input(   inputId,   cb_labels,   checkboxIds,   label,   hint_label = NULL,   small = FALSE,   error = FALSE,   error_message = NULL )"},{"path":"/reference/checkbox_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checkbox Function — checkbox_Input","text":"inputId Input id group checkboxes cb_labels Add names options appear checkboxIds Add values checkbox label Insert text checkbox group. hint_label Insert optional hint/secondary text.  Defaults NULL small change sizing small version checkbox.  Defaults FALSE error Whenever want include error handle component. error_message want default error message.","code":""},{"path":"/reference/checkbox_Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checkbox Function — checkbox_Input","text":"checkbox html shiny object","code":""},{"path":"/reference/checkbox_Input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checkbox Function — checkbox_Input","text":"","code":"if (interactive()) {    ui <- fluidPage(     # Required for error handling function     shinyjs::useShinyjs(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", 'This is a new service'),     shinyGovstyle::gov_layout(size = \"two-thirds\",       # Simple checkbox       shinyGovstyle::checkbox_Input(         inputId = \"check1\",         cb_labels = c(\"Option 1\", \"Option 2\", \"Option 3\"),         checkboxIds = c(\"op1\", \"op2\", \"op3\"),         label = \"Choice option\"),        # Error checkbox       shinyGovstyle::checkbox_Input(         inputId = \"check2\",         cb_labels = c(\"Option 1\", \"Option 2\", \"Option 3\"),         checkboxIds = c(\"op1\", \"op2\", \"op3\"),         label = \"Choice option\",         hint_label = \"Select the best fit\",         error = TRUE,         error_message = \"Select one\"),       # Button to trigger error       shinyGovstyle::button_Input(inputId = \"submit\", label = \"Submit\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {     #'Trigger error on blank submit of eventId2     observeEvent(input$submit, {       if (is.null(input$check2)){         shinyGovstyle::error_on(inputId = \"check2\")       } else {         shinyGovstyle::error_off(inputId = \"check2\")       }     })   }    shinyApp(ui = ui, server = server) }"},{"path":"/reference/clean_heading_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean heading text function This internal function is used in subcontents_links and heading_text to create an automated link between the two — clean_heading_text","title":"Clean heading text function This internal function is used in subcontents_links and heading_text to create an automated link between the two — clean_heading_text","text":"Clean heading text function internal function used subcontents_links heading_text create automated link two","code":""},{"path":"/reference/clean_heading_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean heading text function This internal function is used in subcontents_links and heading_text to create an automated link between the two — clean_heading_text","text":"","code":"clean_heading_text(text)"},{"path":"/reference/clean_heading_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean heading text function This internal function is used in subcontents_links and heading_text to create an automated link between the two — clean_heading_text","text":"text string","code":""},{"path":"/reference/clean_heading_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean heading text function This internal function is used in subcontents_links and heading_text to create an automated link between the two — clean_heading_text","text":"string","code":""},{"path":"/reference/contents_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Contents link function — contents_link","title":"Contents link function — contents_link","text":"function creates action link nav tabs optionally link subcontents headers.","code":""},{"path":"/reference/contents_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Contents link function — contents_link","text":"","code":"contents_link(link_text, input_id, subcontents_text_list, subcontents_id_list)"},{"path":"/reference/contents_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Contents link function — contents_link","text":"link_text vector link text contents input_id contents button id subcontents_text_list vector link text subcontents subcontents_id_list vector link ids subcontents. missing automatically matches id shinygovstyle::heading_text","code":""},{"path":"/reference/contents_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Contents link function — contents_link","text":"action button html shiny object","code":""},{"path":"/reference/contents_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Contents link function — contents_link","text":"","code":"if (interactive()) {      ui <- shiny::fluidPage(      title=\"ShinyGovstyle\",        cookieBanner(\"Run Example\"),        header(\"MOJ\", \"ShinyGovstyle Example\",               logo=\"shinyGovstyle/images/moj_logo-1.png\", logo_width = 66),        banner(          \"banner\",          \"Beta\",          'This is a new service \\u002D your <a class=\"govuk-link\" href=\"#\">              feedback<\/a> will help us to improve it.'),         #Need this to make the error and word count work        shinyjs::useShinyjs(),         #Add a message to show users how to see this code        shiny::tags$br(),        shiny::markdown(          \"Run ```View(run_example)``` in console to see the code for this app\"),          gov_row(          # Nav columns          shiny::column(             width = 3,            id = \"nav\", # DO NOT REMOVE ID             # Contents box            shiny::tags$div(              id = \"govuk-contents-box\", #DO NOT REMOVE ID              class = \"govuk-contents-box\",  #DO NOT REMOVE CLASS               shiny::tags$h2(\"Contents\"),               # Text types tab              contents_link(                \"Text Types\",                \"text_types_button\",                subcontents_text_list = c(\"date_Input\",                \"text_Input\",                \"text_area_Input\",                \"button_Input\"),                subcontents_id_list = c(NA, NA, NA, \"button_input_text_types\")              ),               # Tables tabs and accordions tab              contents_link(                \"Tables, tabs and accordions\",                \"tables_tabs_and_accordions_button\",                subcontents_text_list = c(\"govTable\", \"govTabs\", \"accordions\", \"button_Input\"),                subcontents_id_list = c(NA, NA, NA, \"button_input_tables_tabs_accordions\")              ),                contents_link(                \"Cookies\",                \"cookies_button\"),             )          ),            shiny::column( width = 9,                          id = \"main_col\", # DO NOT REMOVE ID                          #Set up a nav panel so everything not on single page                         shiny::tabsetPanel(                           type = \"hidden\",                           id = \"tab-container\", # DO NOT REMOVE ID                            shiny::tabPanel(                             \"Text Types\",                             value = \"text_types\",                             gov_layout(                               size = \"two-thirds\",                               backlink_Input(\"back1\"),                               heading_text(\"Page 2\", size = \"l\"),                               label_hint(\"label2\", \"These are some examples of the types of user                         text inputs that you can use\"),                               heading_text(\"date_Input\", size = \"s\"),                               date_Input(                                 inputId = \"date1\",                                 label = \"What is your date of birth?\",                                 hint_label = \"For example, 31 3 1980\"),                               heading_text(\"text_Input\", size = \"s\"),                               text_Input(inputId = \"txt1\", label = \"Event name\"),                               heading_text(\"text_area_Input\", size = \"s\"),                               text_area_Input(                                 inputId = \"text_area1\",                                 label = \"Can you provide more detail?\",                                 hint_label = \"Do not include personal or financial information,                like your National Insurance number or credit card details.\"),                               text_area_Input(                                 inputId = \"text_area2\",                                 label = \"How are you today?\",                                 hint_label = \"Leave blank to trigger error\",                                 error = T,                                 error_message = \"Please do not leave blank\",                                 word_limit = 300),                               heading_text(                               \"button_Input\", size = \"s\",                               id = \"button_input_text_types\"),                               button_Input(\"btn2\", \"Go to next page\"),                               button_Input(\"btn3\", \"Check for errors\", type = \"warning\")                             )                           ),                            shiny::tabPanel(                             \"Tables, tabs and accordions\",                             value = \"tables_tabs_and_accordions\",                             gov_layout(                             size = \"two-thirds\",                               backlink_Input(\"back2\"),                               heading_text(\"Page 3\", size = \"l\"),                               label_hint(\"label3\", \"These are some examples of using tabs and                             tables\"),                               heading_text(\"govTable\", size = \"s\"),                               heading_text(\"govTabs\", size = \"s\"),                               heading_text(\"accordions\", size = \"s\"),                               shinyGovstyle::  accordion(                                 \"acc1\",                                 c(\"Writing well for the web\",                                   \"Writing well for specialists\",                                   \"Know your audience\",                                   \"How people read\"                                 ),                                 c(\"This is the content for Writing well for the web.\",                                   \"This is the content for Writing well for specialists.\",                                   \"This is the content for Know your audience.\",                                   \"This is the content for How people read.\"                                 )),                                heading_text(                               \"button_Input\", size = \"s\",                                id = \"button_input_tables_tabs_accordions\"),                               button_Input(\"btn4\", \"Go to next page\"),                             )                           ),                             #####################Create cookie panel################################                           shiny::tabPanel(                             \"Cookies\",                             value = \"panel-cookies\",                             gov_layout(                               size = \"two-thirds\",                               heading_text(\"Cookie page\", size = \"l\"),                               label_hint(\"label-cookies\", \"This an example cookie page that could be                             expanded\")                             )                           )))          ), #end of gov row         footer(TRUE)        ) #end of fluid page       server <- function(input, output, session) {          # Tab nav        shiny::observeEvent(input$back2, {          shiny::updateTabsetPanel(session, \"tab-container\", selected = \"text_types\")        })         shiny::observeEvent(input$tables_tabs_and_accordions_button, {          shiny::updateTabsetPanel(session, \"tab-container\", selected = \"tables_tabs_and_accordions\")        })         shiny::observeEvent(input$cookies_button, {          shiny::updateTabsetPanel(session, \"tab-container\", selected = \"panel-cookies\")        })       }    shiny::shinyApp(ui = ui, server = server) }"},{"path":"/reference/cookieBanner.html","id":null,"dir":"Reference","previous_headings":"","what":"Cookie Banner Function — cookieBanner","title":"Cookie Banner Function — cookieBanner","text":"function creates cookie banner. need shinyjs::useShinyjs() enabled work.  ids pre set.  See example structure.","code":""},{"path":"/reference/cookieBanner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cookie Banner Function — cookieBanner","text":"","code":"cookieBanner(service_name)"},{"path":"/reference/cookieBanner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cookie Banner Function — cookieBanner","text":"service_name Name service add banner","code":""},{"path":"/reference/cookieBanner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cookie Banner Function — cookieBanner","text":"cookie banner html shiny object.","code":""},{"path":"/reference/cookieBanner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cookie Banner Function — cookieBanner","text":"","code":"if (interactive()) { ui <- fluidPage(   shinyGovstyle::header(     main_text = \"Example\",     secondary_text = \"User Examples\",     logo=\"shinyGovstyle/images/moj_logo.png\"),   #Needs shinyjs to work   shinyjs::useShinyjs(),   shinyGovstyle::cookieBanner(\"The best thing\"),   shinyGovstyle::gov_layout(size = \"two-thirds\"),   shinyGovstyle::footer(full = TRUE) )  server <- function(input, output, session) {    #Need these set of observeEvent to create a path through the cookie banner   observeEvent(input$cookieAccept, {     shinyjs::show(id = \"cookieAcceptDiv\")     shinyjs::hide(id = \"cookieMain\")   })    observeEvent(input$cookieReject, {     shinyjs::show(id = \"cookieRejectDiv\")     shinyjs::hide(id = \"cookieMain\")   })    observeEvent(input$hideAccept, {     shinyjs::toggle(id = \"cookieDiv\")   })    observeEvent(input$hideReject, {     shinyjs::toggle(id = \"cookieDiv\")   })    observeEvent(input$cookieLink, {     #Need to link here to where further info is located.  You can use     #updateTabsetPanel to have a cookie page for instance   })  } shinyApp(ui = ui, server = server) }"},{"path":"/reference/date_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Date Input Function — date_Input","title":"Date Input Function — date_Input","text":"function create date input follows GDS component","code":""},{"path":"/reference/date_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Date Input Function — date_Input","text":"","code":"date_Input(   inputId,   label,   hint_label = NULL,   error = FALSE,   error_message = NULL,   day = NULL,   month = NULL,   year = NULL )"},{"path":"/reference/date_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Date Input Function — date_Input","text":"inputId input slot used access value. label Display label control, NULL label. hint_label Display hint label control, NULL hint label. error Whenever include error components.Defaults FALSE. error_message Error handling message? Defaults NULL day Select default day start . Defaults NULL month Select default month start . Defaults NULL year Select default year start . Defaults NULL","code":""},{"path":"/reference/date_Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Date Input Function — date_Input","text":"data input html shiny object","code":""},{"path":"/reference/date_Input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Date Input Function — date_Input","text":"","code":"if (interactive()) {    ui <- fluidPage(     # Required for error handling function.     shinyjs::useShinyjs(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", 'This is a new service'),     shinyGovstyle::gov_layout(size = \"two-thirds\",        # Simple date input       shinyGovstyle::date_Input(         inputId = \"dob_input\",         label = \"Please enter your birthday\"),        # Error date input        shinyGovstyle::date_Input(          inputId = \"dob_input2\",          label = \"Please enter your birthday\",          hint_label = \"For example, 12 11 2007\",          error = TRUE),        # Button to trigger error        shinyGovstyle::button_Input(inputId = \"submit\", label = \"Submit\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {     #'Trigger error on blank submit of dob_input2     observeEvent(input$submit, {       if (input$dob_input2 == \"//\"){         shinyGovstyle::error_on(inputId = \"dob_input2\")       } else {         shinyGovstyle::error_off(           inputId = \"dob_input2\")       }     })   }   shinyApp(ui = ui, server = server) }"},{"path":"/reference/details.html","id":null,"dir":"Reference","previous_headings":"","what":"Details Function — details","title":"Details Function — details","text":"function create detail component can click details.","code":""},{"path":"/reference/details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Details Function — details","text":"","code":"details(inputId, label, help_text)"},{"path":"/reference/details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Details Function — details","text":"inputId input slot used access value. label Main label text help_text Additional help information component.","code":""},{"path":"/reference/details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Details Function — details","text":"details box html shiny object","code":""},{"path":"/reference/details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Details Function — details","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::details(         inputId = \"help_div\",         label = \"Help with form\",         help_text = \"To complete the form you need to fill it in...\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/download_button.html","id":null,"dir":"Reference","previous_headings":"","what":"Download button — download_button","title":"Download button — download_button","text":"download_button() provides standard way provide download link, facilitates important accessible / positive user experience elements, namely: file type file size necessary order users understand downloading, terms able decide comfortable downloading file current connection form able deal downloaded. exact file size easily determined, may acceptable provide estimate upper limit.","code":""},{"path":"/reference/download_button.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download button — download_button","text":"","code":"download_button(outputId, button_label, file_type = \"CSV\", file_size = NULL)"},{"path":"/reference/download_button.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download button — download_button","text":"outputId name output slot shiny::downloadHandler() assigned . button_label Text appear describing download action. Vague text like 'click ' '' cause error, ending full stop. Leading trailing white space automatically trimmed. string shorter 7 characters console warning thrown. way hush providing detail. file_type file type download (default: CSV) file_size file size known. Needs string ending one KB, MB, GB rows.","code":""},{"path":"/reference/download_button.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download button — download_button","text":"shiny.tag object","code":""},{"path":"/reference/download_button.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download button — download_button","text":"","code":"if (interactive()) {   ui <- shiny::fluidPage(     gov_text(\"Choose a data set to download.\"),     select_Input(       \"dataset\",       \"Data set\",       select_text = c(\"Car road tests\", \"New York air quality\"),       select_value = c(\"mtcars\", \"airquality\")     ),     download_button(       \"download_data\",       \"Download selected data set\",       file_size = \"4 KB\"     )   )    server <- function(input, output) {     # The requested data set     data <- reactive({       get(input$dataset)     })      output$download_data <- downloadHandler(       filename = function() {         # Use the selected dataset as the suggested file name         paste0(input$dataset, \".csv\")       },       content = function(file) {         # Write the dataset to the `file` that will be downloaded         write.csv(data(), file)       }     )   }    shiny::shinyApp(ui, server) }"},{"path":"/reference/download_link.html","id":null,"dir":"Reference","previous_headings":"","what":"Download link — download_link","title":"Download link — download_link","text":"download_link() provides standard way provide download link, facilitates important accessible / positive user experience elements, namely: file type file size necessary order users understand downloading, terms able decide comfortable downloading file current connection form able deal downloaded. exact file size easily determined, may acceptable provide estimate upper limit.","code":""},{"path":"/reference/download_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download link — download_link","text":"","code":"download_link(outputId, link_text, file_type = \"CSV\", file_size = NULL)"},{"path":"/reference/download_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download link — download_link","text":"outputId name output slot shiny::downloadHandler() assigned . link_text Text appear describing download action. Vague text like 'click ' '' cause error, ending full stop. Leading trailing white space automatically trimmed. string shorter 7 characters console warning thrown. way hush providing detail. file_type file type download (default: CSV) file_size file size known. Needs string ending one KB, MB, GB rows.","code":""},{"path":"/reference/download_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download link — download_link","text":"shiny.tag object","code":""},{"path":"/reference/download_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download link — download_link","text":"","code":"if (interactive()) {   ui <- shiny::fluidPage(     gov_text(\"Choose a data set to download.\"),     select_Input(       \"dataset\",       \"Data set\",       select_text = c(\"Car road tests\", \"New York air quality\"),       select_value = c(\"mtcars\", \"airquality\")     ),     gov_text(       download_link(         \"download_data\",         \"Download selected data set\",         file_size = \"4 KB\"       )     )   )    server <- function(input, output) {     # The requested data set     data <- reactive({       get(input$dataset)     })      output$download_data <- downloadHandler(       filename = function() {         # Use the selected dataset as the suggested file name         paste0(input$dataset, \".csv\")       },       content = function(file) {         # Write the dataset to the `file` that will be downloaded         write.csv(data(), file)       }     )   }    shiny::shinyApp(ui, server) }"},{"path":"/reference/download_radios.html","id":null,"dir":"Reference","previous_headings":"","what":"Download with extension radios — download_radios","title":"Download with extension radios — download_radios","text":"Download extension radios","code":""},{"path":"/reference/download_radios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download with extension radios — download_radios","text":"","code":"download_radios(   id = \"download_radios\",   download_type = \"table\",   file_types = c(\"CSV\", \"ODS\", \"XLSX\"),   file_sizes = c(\"< 1 GB\", \"< 1 GB\", \"< 1 GB\"),   small = FALSE )"},{"path":"/reference/download_radios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download with extension radios — download_radios","text":"id Shiny element ID. Default \"download_radios\", must customised unique multiple instances module used single app. Must match ID `download_radios_helper()` instance server code. download_type Element downloaded. Expected along lines \"underlying data\", \"table\", \"current data view\". Default \"table\". file_types File formats offer, can combination \"CSV\", \"XLSX\", \"ODS\". Default vector 3. file_sizes Estimated file sizes file format. needs vector length file_types. small Set radio buttons small size (logical, default: FALSE)","code":""},{"path":"/reference/download_radios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download with extension radios — download_radios","text":"UI containing radio selection download button","code":""},{"path":"/reference/download_radios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download with extension radios — download_radios","text":"","code":"if (interactive()) {   library(shiny)   library(shinyGovstyle)    ui <- fluidPage(     download_radios(\"download_file\",       file_types = c(\"CSV\", \"ODS\"),       file_sizes = c(\"2 KB\", \"5 KB\")     )   )    server <- function(input, output, session) {     output$download_file <- download_radios_handler(       \"download_file\",       file_name = \"simple_data_frame\",       file_contents = mtcars     )   }    # How to run the minimal app given in this example =======================   shinyApp(ui, server) }"},{"path":"/reference/download_radios_handler.html","id":null,"dir":"Reference","previous_headings":"","what":"Download with extension radios handler — download_radios_handler","title":"Download with extension radios handler — download_radios_handler","text":"Download extension radios handler","code":""},{"path":"/reference/download_radios_handler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download with extension radios handler — download_radios_handler","text":"","code":"download_radios_handler(id = \"download_radios\", file_name, file_contents)"},{"path":"/reference/download_radios_handler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download with extension radios handler — download_radios_handler","text":"id Shiny element ID. Default \"download_radios\", must customised unique multiple instances module used single app. Must match ID `download_radios()` instance UI code. file_name Name file downloaded file_contents Contents write download file","code":""},{"path":"/reference/download_radios_handler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download with extension radios handler — download_radios_handler","text":"Output use `download_radios()`","code":""},{"path":"/reference/download_radios_handler.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download with extension radios handler — download_radios_handler","text":"","code":"if (interactive()) {   library(shiny)   library(shinyGovstyle)    ui <- fluidPage(     download_radios(\"download_file\",       file_types = c(\"CSV\", \"ODS\"),       file_sizes = c(\"2 KB\", \"5 KB\")     )   )    server <- function(input, output, session) {     output$download_file <- download_radios_handler(       \"download_file\",       file_name = \"simple_data_frame\",       file_contents = mtcars     )   }    # How to run the minimal app given in this example =======================   shinyApp(ui, server) }"},{"path":"/reference/error_off.html","id":null,"dir":"Reference","previous_headings":"","what":"Error off Function — error_off","title":"Error off Function — error_off","text":"function turns error o component, issues sorted.","code":""},{"path":"/reference/error_off.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error off Function — error_off","text":"","code":"error_off(inputId)"},{"path":"/reference/error_off.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error off Function — error_off","text":"inputId inputId turn error handling iff .","code":""},{"path":"/reference/error_off.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error off Function — error_off","text":"return value.  toggles error css","code":""},{"path":"/reference/error_off.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error off Function — error_off","text":"","code":"## Only run examples in interactive R sessions if (interactive()) {    ui <- fluidPage(     # Required for error handling function     shinyjs::useShinyjs(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", 'This is a new service'),     shinyGovstyle::gov_layout(size = \"two-thirds\",       # Error text box       shinyGovstyle::text_Input(         inputId = \"eventId\",         label = \"Event Name\",         error = TRUE),       # Button to trigger error       shinyGovstyle::button_Input(inputId = \"submit\", label = \"Submit\")     ),     shinyGovstyle::footer(full = TRUE)   )     server <- function(input, output, session) {     #Trigger error on blank submit of eventId2     observeEvent(input$submit, {       if (input$eventId != \"\"){         shinyGovstyle::error_off(inputId = \"eventId\")       } else {         shinyGovstyle::error_on(           inputId = \"eventId\",           error_message = \"Please complete\")       }     })   }    # Run the application   shinyApp(ui = ui, server = server) }"},{"path":"/reference/error_on.html","id":null,"dir":"Reference","previous_headings":"","what":"Error on Function — error_on","title":"Error on Function — error_on","text":"function turns error o component.  Can used validate inputs.","code":""},{"path":"/reference/error_on.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error on Function — error_on","text":"","code":"error_on(inputId, error_message = NULL)"},{"path":"/reference/error_on.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error on Function — error_on","text":"inputId input id turn error . error_message want add additional error message. Defaults NULL, showing original designed error message","code":""},{"path":"/reference/error_on.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error on Function — error_on","text":"return value.  toggles error css","code":""},{"path":"/reference/error_on.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error on Function — error_on","text":"","code":"## Only run examples in interactive R sessions if (interactive()) {    ui <- fluidPage(     # Required for error handling function     shinyjs::useShinyjs(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", 'This is a new service'),     shinyGovstyle::gov_layout(size = \"two-thirds\",       # Error text box       shinyGovstyle::text_Input(         inputId = \"eventId\",         label = \"Event Name\",         error = TRUE),       # Button to trigger error       shinyGovstyle::button_Input(inputId = \"submit\", label = \"Submit\")     ),     shinyGovstyle::footer(full = TRUE)   )     server <- function(input, output, session) {     #Trigger error on blank submit of eventId2     observeEvent(input$submit, {       if (input$eventId != \"\"){         shinyGovstyle::error_off(inputId = \"eventId\")       } else {         shinyGovstyle::error_on(           inputId = \"eventId\",           error_message = \"Please complete\")       }     })   }    # Run the application   shinyApp(ui = ui, server = server) }"},{"path":"/reference/error_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Error Summary Function — error_summary","title":"Error Summary Function — error_summary","text":"function loads error summary component display error text. replicates gov style error boxes linked : https://design-system.service.gov.uk/components/error-summary/","code":""},{"path":"/reference/error_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error Summary Function — error_summary","text":"","code":"error_summary(inputId, error_title, error_list)"},{"path":"/reference/error_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error Summary Function — error_summary","text":"inputId input slot used access value. error_title title error summary. error_list list text values displayed error body.","code":""},{"path":"/reference/error_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error Summary Function — error_summary","text":"error_summary html shiny object","code":""},{"path":"/reference/error_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error Summary Function — error_summary","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyjs::useShinyjs(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo = \"shinyGovstyle/images/moj_logo.png\"     ),     shinyGovstyle::gov_layout(       size = \"two-thirds\",       error_summary(         inputId = \"errorId\",         error_title = \"Error title\",         error_list = c(\"error item1\", \"error item2\")       )     ),     shinyGovstyle::button_Input(\"btn1\", \"Change error summary\"),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {      shiny::observeEvent(input$btn1, {       error_summary_update(         \"errorId\",         c(\"error item1\", \"error item2\", \"error item3\")       )},       ignoreInit = TRUE     )   }   shinyApp(ui = ui, server = server) }"},{"path":"/reference/error_summary_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Error Summary Update Function — error_summary_update","title":"Error Summary Update Function — error_summary_update","text":"function changes text displays error summary box. Requires shinyjs::useShinyjs() work.","code":""},{"path":"/reference/error_summary_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error Summary Update Function — error_summary_update","text":"","code":"error_summary_update(inputId, error_list)"},{"path":"/reference/error_summary_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error Summary Update Function — error_summary_update","text":"inputId inputid error summary want update error_list updated list text values displayed error body.","code":""},{"path":"/reference/error_summary_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error Summary Update Function — error_summary_update","text":"update error summary box","code":""},{"path":"/reference/error_summary_update.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error Summary Update Function — error_summary_update","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyjs::useShinyjs(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo = \"shinyGovstyle/images/moj_logo.png\"     ),     shinyGovstyle::gov_layout(       size = \"two-thirds\",       error_summary(         inputId = \"errorId\",         error_title = \"Error title\",         error_list = c(\"error item1\", \"error item2\")       )     ),     shinyGovstyle::button_Input(\"btn1\", \"Change error summary\"),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {      shiny::observeEvent(input$btn1, {       error_summary_update(         \"errorId\",         c(\"error item1\", \"error item2\", \"error item3\")       )},       ignoreInit = TRUE     )   }   shinyApp(ui = ui, server = server) }"},{"path":"/reference/external_link.html","id":null,"dir":"Reference","previous_headings":"","what":"External link — external_link","title":"External link — external_link","text":"commonplace external links open new tab, careful... function automatically adds following link: * `target=\"_blank\"` open new tab * `rel=\"noopener noreferrer\"` prevent [reverse tabnabbing]( https://owasp.org/www-community/attacks/Reverse_Tabnabbing) default function also adds \"(opens new tab)\" link text warn users behaviour. also adds \"link opens new tab\" visually hidden span element within HTML outputted warn non-visual users behaviour. function error end full stop, give warning particularly short link text automatically trim leading trailing white space inputted link_text. displaying lots links together want save space avoiding repeating (opens new tab), can set add_warning = FALSE add line text links saying something like 'following links open new tab'. Related links guidance: * [Government digital services guidelines use links]( https://design-system.service.gov.uk/styles/links/) * [Anchor tag HTML element properties]( https://developer.mozilla.org/en-US/docs/Web/HTML/Element/) * [WCAG 2.2 success criteria 2.4.4: Link Purpose (Context)]( https://www.w3.org/WAI/WCAG22/Understanding/link-purpose--context) * [Web Accessibility standards link text behaviour]( https://www.w3.org/TR/WCAG20-TECHS/G200.html)","code":""},{"path":"/reference/external_link.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"External link — external_link","text":"","code":"external_link(href, link_text, add_warning = TRUE)"},{"path":"/reference/external_link.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"External link — external_link","text":"href URL want link point link_text Text appear describing link, must descriptive page linking . Vague text like 'click ' '' cause error, ending full stop. Leading trailing white space automatically trimmed. string shorter 7 characters console warning thrown. way hush providing detail. add_warning Boolean adding \"(opens new tab)\" end link text warn users behaviour. careful consider accessibility removing visual warning.","code":""},{"path":"/reference/external_link.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"External link — external_link","text":"shiny.tag object","code":""},{"path":"/reference/external_link.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"External link — external_link","text":"Intentionally basic wrapper HTML anchor elements making easier create safe external links standard accessible behaviour. information tag generated, see tags.","code":""},{"path":"/reference/external_link.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"External link — external_link","text":"","code":"external_link(\"https://shiny.posit.co/\", \"R Shiny\") #> <a href=\"https://shiny.posit.co/\" class=\"govuk-link\" target=\"_blank\" rel=\"noopener noreferrer\">R Shiny (opens in new tab)<\/a>  external_link(   \"https://shiny.posit.co/\",   \"R Shiny\",   add_warning = FALSE ) #> <a href=\"https://shiny.posit.co/\" class=\"govuk-link\" target=\"_blank\" rel=\"noopener noreferrer\">R Shiny<span class=\"sr-only\"> (opens in new tab)<\/span><\/a>  # This will trim and show as 'R Shiny' external_link(\"https://shiny.posit.co/\", \"  R Shiny\") #> <a href=\"https://shiny.posit.co/\" class=\"govuk-link\" target=\"_blank\" rel=\"noopener noreferrer\">R Shiny (opens in new tab)<\/a>  # Example of within text shiny::tags$p(   \"Oi, \", external_link(\"https://shiny.posit.co/\", \"R Shiny\"), \" is great.\" ) #> <p> #>   Oi, <a href=\"https://shiny.posit.co/\" class=\"govuk-link\" target=\"_blank\" rel=\"noopener noreferrer\">R Shiny (opens in new tab)<\/a> is great. #> <\/p>  # Example of multiple links together shiny::tags$h2(\"Related resources\") #> <h2>Related resources<\/h2> shiny::tags$p(\"The following links open in a new tab.\") #> <p>The following links open in a new tab.<\/p> shiny::tags$ul(   shiny::tags$li(     external_link(       \"https://shiny.posit.co/\",       \"R Shiny documentation\",       add_warning = FALSE     )   ),   shiny::tags$li(     external_link(       \"https://www.python.org/\",       \"Python documentation\",       add_warning = FALSE     )   ),   shiny::tags$li(     external_link(       \"https://nextjs.org/\",       \"Next.js documentation\",       add_warning = FALSE     )   ) ) #> <ul> #>   <li><a href=\"https://shiny.posit.co/\" class=\"govuk-link\" target=\"_blank\" rel=\"noopener noreferrer\">R Shiny documentation<span class=\"sr-only\"> (opens in new tab)<\/span><\/a><\/li> #>   <li><a href=\"https://www.python.org/\" class=\"govuk-link\" target=\"_blank\" rel=\"noopener noreferrer\">Python documentation<span class=\"sr-only\"> (opens in new tab)<\/span><\/a><\/li> #>   <li><a href=\"https://nextjs.org/\" class=\"govuk-link\" target=\"_blank\" rel=\"noopener noreferrer\">Next.js documentation<span class=\"sr-only\"> (opens in new tab)<\/span><\/a><\/li> #> <\/ul>"},{"path":"/reference/file_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"File Input Function — file_Input","title":"File Input Function — file_Input","text":"function create file upload component.  uses basis shiny fileInput function, restyles label adds error onto . look like www.gov.uk/ style one, although www.gov.uk/ seem settle style , example changes Firefox Chrome","code":""},{"path":"/reference/file_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"File Input Function — file_Input","text":"","code":"file_Input(   inputId,   label,   multiple = FALSE,   accept = NULL,   width = NULL,   buttonLabel = \"Choose file\",   placeholder = \"No file chosen\",   error = FALSE,   error_message = NULL )"},{"path":"/reference/file_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"File Input Function — file_Input","text":"inputId input slot used access value. label Display label control, NULL label. multiple Whether user allowed select upload multiple files . work older browsers, including Internet Explorer 9 earlier. accept character vector MIME types; gives browser hint kind files server expecting. width width input,  e.g. '400px', '100%' buttonLabel label used button. Can text HTML tag object. placeholder text show file uploaded. error Whenever icnlud error handling  Defaults FALSE. error_message Message display error.  Defaults NULL","code":""},{"path":"/reference/file_Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"File Input Function — file_Input","text":"file input html shiny object","code":""},{"path":"/reference/file_Input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"File Input Function — file_Input","text":"","code":"if (interactive()) {   ui <- fluidPage(     # Required for error handling function     shinyjs::useShinyjs(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::banner(     inputId = \"banner\", type = \"beta\", 'This is a new service'),     shinyGovstyle::gov_layout(size = \"two-thirds\",       # Simple file input       shinyGovstyle::file_Input(inputId = \"file1\", label = \"Upload a file\"),       # Error file       shinyGovstyle::file_Input(         inputId = \"file2\",         label = \"Upload a file\",         error = TRUE),       # Button to trigger error       shinyGovstyle::button_Input(inputId = \"submit\", label = \"Submit\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {     #'Trigger error on blank submit of file2     observeEvent(input$submit, {       if (is.null(input$file2)){         shinyGovstyle::error_on(inputId = \"file2\")       } else {         shinyGovstyle::error_off(           inputId = \"file2\")       }     })   }   shinyApp(ui = ui, server = server) }"},{"path":"/reference/font.html","id":null,"dir":"Reference","previous_headings":"","what":"Font Function — font","title":"Font Function — font","text":"function adds rge nta fonts app. See https://design-system.service.gov.uk/styles/typography/ allowed.","code":""},{"path":"/reference/font.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Font Function — font","text":"","code":"font()"},{"path":"/reference/font.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Font Function — font","text":"value returned.  loads font css file","code":""},{"path":"/reference/font.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Font Function — font","text":"","code":"if (interactive()) {    ui <- fluidPage(     font(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\")   )    server <- function(input, output, session) {}    shinyApp(ui = ui, server = server) }"},{"path":"/reference/footer.html","id":null,"dir":"Reference","previous_headings":"","what":"Footer Function — footer","title":"Footer Function — footer","text":"function create gov style footer page","code":""},{"path":"/reference/footer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Footer Function — footer","text":"","code":"footer(full = FALSE, links = NULL)"},{"path":"/reference/footer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Footer Function — footer","text":"full Whenever want blank footer official gov version. Defaults FALSE links vector actionLinks added footer, inputIDs auto-generated snake case version link text, e.g. \"Accessibility Statement\" inputID accessibility_statement","code":""},{"path":"/reference/footer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Footer Function — footer","text":"footer html shiny object","code":""},{"path":"/reference/footer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Footer Function — footer","text":"can add actionLinks links footer using links_list argument. Links footer used sparingly usually supporting information pages accessibility statement, privacy notice, cookies information link statement voluntary adoption statistics code practice. Generally using footer links controlling hidden tabset end user looks like new page.","code":""},{"path":"/reference/footer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Footer Function — footer","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo = \"shinyGovstyle/images/moj_logo.png\"     ),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", \"This is a new service\"     ),     tags$br(),     tags$br(),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}    shinyApp(ui = ui, server = server) }  # Add links footer(links = c(\"Accessibility statement\", \"Cookies\")) #> <footer class=\"govuk-footer \" role=\"contentinfo\"> #>   <div class=\"govuk-width-container \"> #>     <div class=\"govuk-footer__meta\"> #>       <div class=\"govuk-footer__meta-item govuk-footer__meta-item--grow\"> #>         <div> #>           <h2 class=\"govuk-visually-hidden\">Support links<\/h2> #>           <ul class=\"govuk-footer__inline-list\"> #>             <li class=\"govuk-footer__inline-list-item\"> #>               <a class=\"action-button govuk-link govuk-footer__link\" href=\"#\" id=\"accessibility_statement\">Accessibility statement<\/a> #>             <\/li> #>             <li class=\"govuk-footer__inline-list-item\"> #>               <a class=\"action-button govuk-link govuk-footer__link\" href=\"#\" id=\"cookies\">Cookies<\/a> #>             <\/li> #>           <\/ul> #>         <\/div> #>       <\/div> #>     <\/div> #>   <\/div> #> <\/footer>  # Full app with link controlling a hidden tab if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo = \"shinyGovstyle/images/moj_logo.png\"     ),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", \"This is a new service\"     ),     shiny::tabsetPanel(       type = \"hidden\",       id = \"tabs\",       shiny::tabPanel(         \"Main content\",         value = \"main\",         heading_text(\"Hello world!\")       ),       shiny::tabPanel(         \"Cookies\",         value = \"cookies\",         heading_text(\"Cookies\")       )     ),     shinyGovstyle::footer(       full = TRUE,       links = c(\"Accessibility statement\", \"Cookies\")     )   )    server <- function(input, output, session) {     shiny::observeEvent(input$cookies, {       shiny::updateTabsetPanel(session, \"tabs\", selected = \"cookies\")     })   }    shinyApp(ui = ui, server = server) }"},{"path":"/reference/govTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Table Function — govTable","title":"Table Function — govTable","text":"function inserts gov styled table.  Format header looking rows columns","code":""},{"path":"/reference/govTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table Function — govTable","text":"","code":"govTable(   inputId,   df,   caption,   caption_size = \"l\",   num_col = NULL,   width_overwrite = NULL )"},{"path":"/reference/govTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table Function — govTable","text":"inputId Input id table df expects dataframe create table caption adds caption table header caption_size adjust size caption.  Options s, m, l, xl, l default num_col adds numeric class format columns. width_overwrite change width. Need include width every column. Columns must add 1. Options three-quarters, two-thirds, one-half, one-third, one-quarter. Default NULL.","code":""},{"path":"/reference/govTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table Function — govTable","text":"table html shiny object","code":""},{"path":"/reference/govTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table Function — govTable","text":"","code":"if (interactive()) {    Months <- c(\"January\", \"February\", \"March\")   Bikes <- c(\"£85\", \"£75\", \"£165\")   Cars <- c(\"£95\", \"£55\", \"£125\")    example_data <- data.frame(Months, Bikes, Cars)    ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", 'This is a new service'),     shinyGovstyle::gov_layout(size = \"two-thirds\",     shinyGovstyle::govTable(       \"tab1\", example_data, \"Test\", \"l\", num_col = c(2,3),       width_overwrite = c(\"one-half\", \"one-quarter\", \"one-quarter\"))     ),      shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}    shinyApp(ui = ui, server = server) }"},{"path":"/reference/govTable_interactive.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive table Function — govTable_interactive","title":"Interactive table Function — govTable_interactive","text":"function inserts government-styled table using `reactable`.","code":""},{"path":"/reference/govTable_interactive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive table Function — govTable_interactive","text":"","code":"govTable_interactive(   inputId,   df,   caption,   caption_size = \"l\",   right_col = NULL,   col_widths = list(),   page_size = 10 )"},{"path":"/reference/govTable_interactive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive table Function — govTable_interactive","text":"inputId unique input ID table. df dataframe used generate table. caption text caption displayed table heading. caption_size Defines size caption text. Options: \"s\", \"m\", \"l\", \"xl\" (default: \"l\"). right_col vector column names right-aligned. default, numeric data right-aligned, character data left-aligned. col_widths named list specifying column widths using width classes (e.g., \"one-quarter\", \"two-thirds\"). page_size default number rows displayed per page (default: 10).","code":""},{"path":"/reference/govTable_interactive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive table Function — govTable_interactive","text":"`reactable` HTML widget styled GOV.UK classes.","code":""},{"path":"/reference/govTable_interactive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactive table Function — govTable_interactive","text":"","code":"if (interactive()) {    Months <- rep(c(\"January\", \"February\", \"March\", \"April\", \"May\"), times = 2)   Colours <- rep(c(\"Red\", \"Blue\"), times = 5)   Bikes <- c(85, 75, 165, 90, 80, 95, 85, 175, 100, 95)   Cars <- c(95, 55, 125, 110, 70, 120, 60, 130, 115, 90)   Vans <- c(150, 130, 180, 160, 140, 175, 135, 185, 155, 145)   Buses <- c(200, 180, 220, 210, 190, 215, 185, 225, 205, 195)   example_data <- data.frame(Months, Colours, Bikes, Cars, Vans, Buses)    ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", 'This is a new service'),     shinyGovstyle::gov_layout(size = \"two-thirds\",       govTable_interactive(         \"tab1\", example_data, \"Test Table\", \"l\",         right_col = c(\"Colours\", \"Bikes\", \"Cars\", \"Vans\", \"Buses\"),         col_widths = list(Months = \"one-third\"),         page_size = 5         )     ),      shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}    shinyApp(ui, server) }"},{"path":"/reference/govTabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabs Function — govTabs","title":"Tabs Function — govTabs","text":"function creates tabs based table.  requires single dataframe grouping variable","code":""},{"path":"/reference/govTabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabs Function — govTabs","text":"","code":"govTabs(inputId, df, group_col)"},{"path":"/reference/govTabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabs Function — govTabs","text":"inputId id access tag df single dataframe data.  See example structure. group_col column name groups used tabs","code":""},{"path":"/reference/govTabs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabs Function — govTabs","text":"tab table html shiny object.","code":""},{"path":"/reference/govTabs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabs Function — govTabs","text":"","code":"if (interactive()) {    # Create an example dataset   tabs <- c(rep(\"Past Day\", 3),             rep(\"Past Week\", 3),             rep(\"Past Month\", 3),             rep(\"Past Year\", 3))   Case_manager <- rep(c(\"David Francis\", \"Paul Farmer\", \"Rita Patel\"),4)   Cases_open <- c(3, 1, 2, 24, 16, 24, 98, 122, 126, 1380, 1129, 1539)   Cases_closed <- c(0, 0, 0, 18, 20, 27, 95, 131, 142, 1472, 1083, 1265)   data <- data.frame(tabs, Case_manager, Cases_open, Cases_closed)    ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::govTabs(data, \"tabs\")),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/gov_layout.html","id":null,"dir":"Reference","previous_headings":"","what":"Page Layout Function — gov_layout","title":"Page Layout Function — gov_layout","text":"function loads page layout, work well `gov_main_layout` associated functions.  kept now simpler version grids needed.","code":""},{"path":"/reference/gov_layout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Page Layout Function — gov_layout","text":"","code":"gov_layout(..., inputID = \"main\", size = \"full\")"},{"path":"/reference/gov_layout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Page Layout Function — gov_layout","text":"... include components UI want within main page. inputID ID main div.  Defaults \"main\" size Layout page.  Optional full, one-half, two-thirds, one-third one-quarter.  Defaults \"full\"","code":""},{"path":"/reference/gov_layout.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Page Layout Function — gov_layout","text":"html shiny layout div","code":""},{"path":"/reference/gov_layout.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Page Layout Function — gov_layout","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"full\",       shinyGovstyle::panel_output(         inputId = \"panel1\",         main_text = \"Application Complete\",         sub_text = \"Thank you for submitting your application.         Your reference is xvsiq\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/gov_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Gov List function — gov_list","title":"Gov List function — gov_list","text":"Gov List function","code":""},{"path":"/reference/gov_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gov List function — gov_list","text":"","code":"gov_list(list, style = \"none\")"},{"path":"/reference/gov_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gov List function — gov_list","text":"list vector list style options: \"none\", \"bullet\", \"number\". defaults \"none\".","code":""},{"path":"/reference/gov_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Gov List function — gov_list","text":"","code":"if (interactive()) {    ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\"),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", 'This is a new service'),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::heading_text(\"gov_list\", size = \"s\"),       shinyGovstyle::gov_text(\"List:\"),      gov_list(list = c(\"a\", \"b\", \"c\")),       shinyGovstyle::gov_text(\"Bulleted list:\"),      gov_list(list = c(\"a\", \"b\", \"c\"), style = \"bullet\"),       shinyGovstyle::gov_text(\"Numbered list:\"),      gov_list(list = c(\"one\", \"two\", \"three\"), style = \"number\")     )   )    server <- function(input, output, session) {}    shinyApp(ui = ui, server = server) }"},{"path":"/reference/gov_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabs Function — gov_summary","title":"Tabs Function — gov_summary","text":"function creates tabs based table.  requires single dataframe grouping variable","code":""},{"path":"/reference/gov_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabs Function — gov_summary","text":"","code":"gov_summary(inputId, headers, info, action = FALSE, border = TRUE)"},{"path":"/reference/gov_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabs Function — gov_summary","text":"inputId id access summary list headers input row headers value info summary information values table action whenever change link needed.  sets input value headers using lowercase underscore replace gaps. Default set FALSE border set table borders.  Default set TRUE","code":""},{"path":"/reference/gov_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabs Function — gov_summary","text":"summary list table html shiny object.","code":""},{"path":"/reference/gov_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabs Function — gov_summary","text":"","code":"if (interactive()) {    # Create an example dataset   headers <- c(\"Name\", \"Date of birth\", \"Contact information\", \"Contact details\")   info <- c(     \"Sarah Philips\",     \"5 January 1978\",     \"72 Guild Street <br> London <br> SE23 6FH\",     \"07700 900457 <br> sarah.phillips@example.com\")    ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::gov_summary(\"sumID\", headers, info, action = FALSE)),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/header.html","id":null,"dir":"Reference","previous_headings":"","what":"Header Function — header","title":"Header Function — header","text":"function create header banner.  use top screen","code":""},{"path":"/reference/header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Header Function — header","text":"","code":"header(   main_text,   secondary_text,   logo = NULL,   main_link = \"#\",   secondary_link = \"#\",   logo_alt_text = NULL,   main_alt_text = NULL,   secondary_alt_text = NULL,   logo_width = 36,   logo_height = 32 )"},{"path":"/reference/header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Header Function — header","text":"main_text Main text goes header. secondary_text Secondary header supplement main text. logo Add link logo apply header. Use crown use crown svg version gov uk. main_link Add link clicking main text. secondary_link Add link clicking secondary header. logo_alt_text Add alternative text logo. used logo used. main_alt_text Add alternative text main link. used main link used. secondary_alt_text Add alternative text secondary link. used secondary link used. logo_width Change logo size width CSS improve fit. logo_height Change logo size height CSS improve fit.","code":""},{"path":"/reference/header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Header Function — header","text":"header HTML shiny object","code":""},{"path":"/reference/header.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Header Function — header","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo = \"shinyGovstyle/images/moj_logo.png\",       logo_alt_text = \"Ministry of Justice Logo\"     )   )    server <- function(input, output, session) {}    shinyApp(ui = ui, server = server) }"},{"path":"/reference/heading_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Heading Text Function — heading_text","title":"Heading Text Function — heading_text","text":"function create heading text","code":""},{"path":"/reference/heading_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Heading Text Function — heading_text","text":"","code":"heading_text(text_input, size = \"xl\", id)"},{"path":"/reference/heading_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Heading Text Function — heading_text","text":"text_input Text display size Text size using xl, l, m, s.  Defaults xl. id Custom header id","code":""},{"path":"/reference/heading_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Heading Text Function — heading_text","text":"heading text html shiny object","code":""},{"path":"/reference/heading_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Heading Text Function — heading_text","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::heading_text(\"This is great text\", \"m\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/input_field.html","id":null,"dir":"Reference","previous_headings":"","what":"Input Field Function — input_field","title":"Input Field Function — input_field","text":"function inserts number text inputs. Useful addresses.","code":""},{"path":"/reference/input_field.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Input Field Function — input_field","text":"","code":"input_field(   legend,   labels,   inputIds,   widths = NULL,   types = \"text\",   error = FALSE,   error_message = NULL )"},{"path":"/reference/input_field.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Input Field Function — input_field","text":"legend Legend goes fieldset labels list labels text inputs inputIds list input slots used access value. widths control size box based number characters required.  Options 30, 20, 10, 5, 4, 3, 2.  NULL limit size types text box types.  default text. error Whenever icnlud error handling  Defaults FALSE. error_message Message display error.  Defaults NULL","code":""},{"path":"/reference/input_field.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Input Field Function — input_field","text":"input field html shiny object","code":""},{"path":"/reference/input_field.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Input Field Function — input_field","text":"","code":"if (interactive()) {    ui <- fluidPage(     # Required for error handling function     shinyjs::useShinyjs(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", 'This is a new service'),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::input_field(         legend =\"List of three text boxes in a field\",         labels = c(\"Field 1\", \"Field 2\", \"Field 3\"),         inputIds = c(\"field1\", \"field2\", \"field3\"),         widths = c(30,20,10),         error = TRUE),      # Button to trigger error      shinyGovstyle::button_Input(inputId = \"submit\", label = \"Submit\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {     # Trigger error on blank submit of field2     observeEvent(input$submit, {       if (input$field2 == \"\"){         shinyGovstyle::error_on(inputId = \"field2\",                                 error_message = \"Please complete\")       } else {         shinyGovstyle::error_off(           inputId = \"field2\")       }     })   }   shinyApp(ui = ui, server = server) }"},{"path":"/reference/insert_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert Text Function — insert_text","title":"Insert Text Function — insert_text","text":"function loads insert text component display additional information special format.","code":""},{"path":"/reference/insert_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert Text Function — insert_text","text":"","code":"insert_text(inputId, text)"},{"path":"/reference/insert_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert Text Function — insert_text","text":"inputId input slot used access value. text Text want display insert","code":""},{"path":"/reference/insert_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert Text Function — insert_text","text":"insert text html shiny object","code":""},{"path":"/reference/insert_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert Text Function — insert_text","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::insert_text(         inputId = \"note\",         text = \"It can take up to 8 weeks to register a lasting power of                 attorney if there are no mistakes in the application.\"       )     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/label_hint.html","id":null,"dir":"Reference","previous_headings":"","what":"Label with Hint Function — label_hint","title":"Label with Hint Function — label_hint","text":"function inserts label optional hint","code":""},{"path":"/reference/label_hint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label with Hint Function — label_hint","text":"","code":"label_hint(inputId, label, hint_input = NULL)"},{"path":"/reference/label_hint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label with Hint Function — label_hint","text":"inputId input slot used access value. label Display label control, NULL label. hint_input Display hint label control, NULL hint label.","code":""},{"path":"/reference/label_hint.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label with Hint Function — label_hint","text":"label hint html shiny object","code":""},{"path":"/reference/label_hint.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label with Hint Function — label_hint","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"two-thirds\",       label_hint(         inputId = \"label1\",         label = \"This is a label\",         hint_input = \"This is a hint\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/layouts.html","id":null,"dir":"Reference","previous_headings":"","what":"Page Layout Functions — layouts","title":"Page Layout Functions — layouts","text":"function loads page layout gov layout.  selection components can sit within .  gov_main_layout overarching layout.  gov_row creates row gov_box creates box within row.  gov_text container text bodies.","code":""},{"path":"/reference/layouts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Page Layout Functions — layouts","text":"","code":"gov_main_layout(..., inputID = \"main\")  gov_row(...)  gov_box(..., size = \"full\")  gov_text(...)"},{"path":"/reference/layouts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Page Layout Functions — layouts","text":"... include components UI want within main page.  components made flow .  See example inputID ID main div.  Defaults \"main\" size size box row.  Optional full, one-half, two-thirds, one-third one-quarter.  Defaults \"full\"","code":""},{"path":"/reference/layouts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Page Layout Functions — layouts","text":"html shiny layout div","code":""},{"path":"/reference/layouts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Page Layout Functions — layouts","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_main_layout(       shinyGovstyle::gov_row(         shinyGovstyle::gov_box(           size = \"full\",           shinyGovstyle::gov_text(\"govuk-grid-column-full\")         )       ),       shinyGovstyle::gov_row(         shinyGovstyle::gov_box(           size = \"one-half\",           shinyGovstyle::gov_text(\"govuk-grid-column-one-half\")         ),         shinyGovstyle::gov_box(           size = \"one-half\",           shinyGovstyle::gov_text(\"govuk-grid-column-one-half\")         )       ),       shinyGovstyle::gov_row(         shinyGovstyle::gov_box(           size = \"one-third\",           shinyGovstyle::gov_text(\"govuk-grid-column-one-third\")         ),         shinyGovstyle::gov_box(           size = \"two-third\",           shinyGovstyle::gov_text(\"govuk-grid-column-two-third\")         )       ),       shinyGovstyle::gov_row(         shinyGovstyle::gov_box(           size = \"one-quarter\",           shinyGovstyle::gov_text(\"govuk-grid-column-one-quarter\")         ),         shinyGovstyle::gov_box(           size = \"three-quarters\",           shinyGovstyle::gov_text(\"govuk-grid-column-three-quarters\")         )       )     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/noti_banner.html","id":null,"dir":"Reference","previous_headings":"","what":"Notification Banner Function — noti_banner","title":"Notification Banner Function — noti_banner","text":"function create notification banner","code":""},{"path":"/reference/noti_banner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Notification Banner Function — noti_banner","text":"","code":"noti_banner(   inputId,   title_txt = \"Important\",   body_txt = NULL,   type = \"standard\" )"},{"path":"/reference/noti_banner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Notification Banner Function — noti_banner","text":"inputId input id banner title_txt wording appears title body_txt wording appears banner body type type banner.  Options standard success. Standard default","code":""},{"path":"/reference/noti_banner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Notification Banner Function — noti_banner","text":"notification html shiny object","code":""},{"path":"/reference/noti_banner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Notification Banner Function — noti_banner","text":"","code":"if (interactive()) {    ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::noti_banner(       inputId = \"banner\", title_txt = \"Important\", body_txt = \"Example text\")   )    server <- function(input, output, session) {}    shinyApp(ui = ui, server = server) }"},{"path":"/reference/panel_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Panel output — panel_output","title":"Panel output — panel_output","text":"function inserts panel.  Normally used confirmation screens","code":""},{"path":"/reference/panel_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Panel output — panel_output","text":"","code":"panel_output(inputId, main_text, sub_text)"},{"path":"/reference/panel_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Panel output — panel_output","text":"inputId input slot used access value. main_text Add header panel sub_text Add main body text panel","code":""},{"path":"/reference/panel_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Panel output — panel_output","text":"panel html shiny object","code":""},{"path":"/reference/panel_output.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Panel output — panel_output","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"full\",       shinyGovstyle::panel_output(         inputId = \"panel1\",         main_text = \"Application Complete\",         sub_text = \"Thank you for submitting your application.                     Your reference is xvsiq\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"/reference/radio_button_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Radio Button Function — radio_button_Input","title":"Radio Button Function — radio_button_Input","text":"function create radio buttons","code":""},{"path":"/reference/radio_button_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radio Button Function — radio_button_Input","text":"","code":"radio_button_Input(   inputId,   label,   choices = NULL,   selected = NULL,   inline = FALSE,   small = FALSE,   choiceNames = NULL,   choiceValues = NULL,   hint_label = NULL,   error = FALSE,   error_message = NULL,   custom_class = \"\" )"},{"path":"/reference/radio_button_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Radio Button Function — radio_button_Input","text":"inputId input slot used access value. label Input label. choices List values select (elements list named name rather value displayed user) selected initially selected value. inline want radio inline ,  Default FALSE small want smaller versions radio buttons,  Default FALSE choiceNames, choiceValues checkboxGroupInput. List names values, respectively, displayed user app correspond choice (reason must length). either arguments provided, must provided choices must provided. advantage using named list choices choiceNames allows type UI object passed (tag objects, icons, HTML code, ...), instead just simple text. hint_label Additional hint text may want display label.  Defaults NULL error Whenever want include error handle component. error_message want default error message. custom_class want add additional classes radio buttons","code":""},{"path":"/reference/radio_button_Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Radio Button Function — radio_button_Input","text":"radio buttons html shiny object","code":""},{"path":"/reference/radio_button_Input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Radio Button Function — radio_button_Input","text":"","code":"if (interactive()) {   ui <- fluidPage(     # Required for error handling function     shinyjs::useShinyjs(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo = \"shinyGovstyle/images/moj_logo.png\"     ),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", \"This is a new service\"     ),     shinyGovstyle::gov_layout(       size = \"two-thirds\",       # Simple radio       shinyGovstyle::radio_button_Input(         inputId = \"radio1\",         choices = c(\"Yes\", \"No\", \"Maybe\"),         label = \"Choice option\"       ),       # Error radio       shinyGovstyle::radio_button_Input(         inputId = \"radio2\",         choices = c(\"Yes\", \"No\", \"Maybe\"),         label = \"Choice option\",         hint_label = \"Select the best fit\",         inline = TRUE,         error = TRUE,         error_message = \"Select one\"       ),       # Button to trigger error       shinyGovstyle::button_Input(inputId = \"submit\", label = \"Submit\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {     # Trigger error on blank submit of eventId2     observeEvent(input$submit, {       if (is.null(input$radio2)) {         shinyGovstyle::error_on(inputId = \"radio2\")       } else {         shinyGovstyle::error_off(           inputId = \"radio2\"         )       }     })   }   shinyApp(ui = ui, server = server) }"},{"path":"/reference/run_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Run examples — run_example","title":"Run examples — run_example","text":"function runs example R Shiny app showcasing different parts package. Code app can found inst/example_app folder source code.","code":""},{"path":"/reference/run_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run examples — run_example","text":"","code":"run_example()"},{"path":"/reference/run_example.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run examples — run_example","text":"runs R Shiny app examples ","code":""},{"path":"/reference/run_example.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run examples — run_example","text":"app also deployed following URL: https://department--education.shinyapps.io/shinygovstyle-example-app/","code":""},{"path":"/reference/run_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run examples — run_example","text":"","code":"if (interactive()) {   run_example() }"},{"path":"/reference/select_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Select Function — select_Input","title":"Select Function — select_Input","text":"function inserts select box","code":""},{"path":"/reference/select_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select Function — select_Input","text":"","code":"select_Input(inputId, label, select_text, select_value)"},{"path":"/reference/select_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select Function — select_Input","text":"inputId Input id component label Insert text label. select_text Add text apply drop list select_value Add value used selection.","code":""},{"path":"/reference/select_Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select Function — select_Input","text":"select input html shiny object","code":""},{"path":"/reference/select_Input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Select Function — select_Input","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"full\",       select_Input(         inputId = \"sorter\",         label = \"Sort by\",         select_text = c(\"Recently published\",                         \"Recently updated\",                         \"Most views\",                         \"Most comments\"),         select_value = c(\"published\", \"updated\", \"view\", \"comments\")),         tags$br()     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/skip_to_main.html","id":null,"dir":"Reference","previous_headings":"","what":"Skip to main content link — skip_to_main","title":"Skip to main content link — skip_to_main","text":"function generates accessible 'Skip main content' link, typically used keyboard-users bypass content navigate directly main content page. Important: main column need id \"main_col\" work","code":""},{"path":"/reference/skip_to_main.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Skip to main content link — skip_to_main","text":"","code":"skip_to_main()"},{"path":"/reference/skip_to_main.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Skip to main content link — skip_to_main","text":"skip button skips section id \"main_col\"","code":""},{"path":"/reference/skip_to_main.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Skip to main content link — skip_to_main","text":"","code":"if (interactive()) {   ui <- fluidPage(     cookieBanner(\"Run Example\"),     skip_to_main(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"     ),     shinyjs::useShinyjs(),  # shinyjs is needed to manage visibility of elements     gov_row(     shiny::column(     width = 3,     id = \"nav\",     # Contents box      shiny::tags$div(        id = \"govuk-contents-box\", #DO NOT REMOVE ID        class = \"govuk-contents-box\",  #DO NOT REMOVE CLASS        shiny::tags$h2(\"Contents\"),        p(\"Your contents links go here\"),      )     ),      shiny::column(     width = 9,     id = \"main_col\",     shiny::tabsetPanel(      type = \"hidden\",      id = \"tab-container\", # DO NOT REMOVE ID      shiny::tabPanel(        \"Your main content\",        value = \"your_main_content\",          gov_layout(            size = \"two-thirds\",            heading_text(\"Your main content\", size = \"l\"),            heading_text(\"accordions\", size = \"s\"),            shinyGovstyle::  accordion(              \"acc1\",              c(\"Writing well for the web\",                \"Writing well for specialists\",                \"Know your audience\",                \"How people read\"              ),              c(\"This is the content for Writing well for the web.\",                \"This is the content for Writing well for specialists.\",                \"This is the content for Know your audience.\",                \"This is the content for How people read.\"              )),           )        )      )    )  ) )   server <- function(input, output, session){   }   shinyApp(ui = ui, server = server)  }"},{"path":"/reference/subcontents_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Subcontents links function This function is used internally within contents_link to create links to headings within pages. — subcontents_links","title":"Subcontents links function This function is used internally within contents_link to create links to headings within pages. — subcontents_links","text":"Subcontents links function function used internally within contents_link create links headings within pages.","code":""},{"path":"/reference/subcontents_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subcontents links function This function is used internally within contents_link to create links to headings within pages. — subcontents_links","text":"","code":"subcontents_links(subcontents_text_list, subcontents_id_list)"},{"path":"/reference/subcontents_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subcontents links function This function is used internally within contents_link to create links to headings within pages. — subcontents_links","text":"subcontents_text_list vector link text subcontents subcontents_id_list vector link ids subcontents. pass NAs automatic matching id shinygovstyle::heading_text","code":""},{"path":"/reference/subcontents_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subcontents links function This function is used internally within contents_link to create links to headings within pages. — subcontents_links","text":"ol html shiny object","code":""},{"path":"/reference/subcontents_links.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subcontents links function This function is used internally within contents_link to create links to headings within pages. — subcontents_links","text":"","code":"if (interactive()) {   ui <- shiny::fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo = \"shinyGovstyle/images/moj_logo.png\"     ),     shiny::column(       width = 3,       id = \"nav\",       shiny::tags$div(         shiny::tags$h2(\"Contents\"),         subcontents_links(           c(\"radio_button_Input (inline)\", \"button_Input\"),           c(NA, NA)         ),         subcontents_links(           c(\"date_Input\", \"button_Input\"),           c(NA, \"button_input_text_types\")         )       )     )   )    server <- function(input, output, session) {   }   shiny::shinyApp(ui = ui, server = server) }"},{"path":"/reference/tag_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Tag Function — tag_Input","title":"Tag Function — tag_Input","text":"function creates tag","code":""},{"path":"/reference/tag_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tag Function — tag_Input","text":"","code":"tag_Input(inputId, text, colour = \"navy\")"},{"path":"/reference/tag_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tag Function — tag_Input","text":"inputId id access tag text text tag colour colour tag.  Default navy.  options grey, green, turquoise, blue, purple, pink, red, orange yellow","code":""},{"path":"/reference/tag_Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tag Function — tag_Input","text":"tag html shiny object.","code":""},{"path":"/reference/tag_Input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tag Function — tag_Input","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::tag_Input(\"tag1\", \"Complete\"),       shinyGovstyle::tag_Input(\"tag2\", \"Incomplete\", \"red\")),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/text_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Text Input Function — text_Input","title":"Text Input Function — text_Input","text":"function create text area input","code":""},{"path":"/reference/text_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text Input Function — text_Input","text":"","code":"text_Input(   inputId,   label,   hint_label = NULL,   type = \"text\",   width = NULL,   error = FALSE,   error_message = NULL,   prefix = NULL,   suffix = NULL )"},{"path":"/reference/text_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text Input Function — text_Input","text":"inputId input slot used access value. label Display label control, NULL label. hint_label Display hint label control, NULL hint label. type Type text input accept.  Defaults text. width control size box based number characters required.  Options 30, 20, 10, 5, 4, 3, 2.  NULL limit size error Whenever include error handling  Defaults FALSE. error_message Message display error.  Defaults NULL prefix Add prefix box.  Defaults NULL suffix Add suffix box.  Defaults NULL","code":""},{"path":"/reference/text_Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Text Input Function — text_Input","text":"text input html shiny object","code":""},{"path":"/reference/text_Input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text Input Function — text_Input","text":"","code":"## Only run examples in interactive R sessions if (interactive()) {    ui <- fluidPage(     # Required for error handling function     shinyjs::useShinyjs(),     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::banner(       inputId = \"banner\", type = \"beta\", 'This is a new service'),     shinyGovstyle::gov_layout(size = \"two-thirds\",       # Simple text box       shinyGovstyle::text_Input(inputId = \"eventId\", label = \"Event Name\"),       # Error text box       shinyGovstyle::text_Input(         inputId = \"eventId2\",         label = \"Event Name\",         hint_label = \"This can be found on the letter\",         error = TRUE),       # Button to trigger error       shinyGovstyle::button_Input(inputId = \"submit\", label = \"Submit\")     ),     shinyGovstyle::footer(full = TRUE)   )     server <- function(input, output, session) {     #Trigger error on blank submit of eventId2     observeEvent(input$submit, {       if (input$eventId2 != \"\"){         shinyGovstyle::error_off(inputId = \"eventId2\")       } else {         shinyGovstyle::error_on(           inputId = \"eventId2\",           error_message = \"Please complete\")       }     })   }    # Run the application   shinyApp(ui = ui, server = server) }"},{"path":"/reference/text_area_Input.html","id":null,"dir":"Reference","previous_headings":"","what":"Text Area Input Function — text_area_Input","title":"Text Area Input Function — text_area_Input","text":"function create text area input","code":""},{"path":"/reference/text_area_Input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text Area Input Function — text_area_Input","text":"","code":"text_area_Input(   inputId,   label,   hint_label = NULL,   row_no = 5,   error = FALSE,   error_message = NULL,   word_limit = NULL )"},{"path":"/reference/text_area_Input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text Area Input Function — text_area_Input","text":"inputId input slot used access value. label Display label control, NULL label. hint_label Display hint label control, NULL hint label. row_no Size text entry box.  Defaults 5. error Whenever icnlud error handling  Defaults FALSE error_message Message display error.  Defaults NULL word_limit Add word limit display.  Defaults NULL.","code":""},{"path":"/reference/text_area_Input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Text Area Input Function — text_area_Input","text":"text area box html shiny object","code":""},{"path":"/reference/text_area_Input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Text Area Input Function — text_area_Input","text":"","code":"text_area_Input(\"taId\", \"Can you provide more detail?\", \"Do not include personal or financial information, like your National Insurance number or credit card details.\") #> <div class=\"govuk-form-group govuk-character-count\" id=\"taIddiv\"> #>   <label class=\"govuk-label\">Can you provide more detail?<\/label> #>   <div class=\"govuk-hint\">Do not include personal or financial information, like your #> National Insurance number or credit card details.<\/div> #>   <textarea id=\"taId\" class=\"govuk-textarea\" rows=\"5\"><\/textarea> #> <\/div>"},{"path":"/reference/value_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a value text box with optional description and colour — value_box","title":"Create a value text box with optional description and colour — value_box","text":"function generates value text box optional description customisable colour. text box can used Shiny applications display highlighted information, statistics key metrics.","code":""},{"path":"/reference/value_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a value text box with optional description and colour — value_box","text":"","code":"value_box(value = \"your value goes here\", text = NA, colour = \"blue\")"},{"path":"/reference/value_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a value text box with optional description and colour — value_box","text":"value Character. primary value display value box. Defaults \"value goes \". text Character NA. optional description appear value. provided (default NA), description displayed.. colour Character. colour apply value box. Defaults \"blue\". Choose following: \"grey\", \"purple\", \"turquoise\", \"blue\", \"light-blue\", \"yellow\", \"orange\", \"red\", \"pink\", \"green\".","code":""},{"path":"/reference/value_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a value text box with optional description and colour — value_box","text":"Shiny `div` tag representing value box, styled according specified parameters.","code":""},{"path":"/reference/value_box.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a value text box with optional description and colour — value_box","text":"","code":"if (interactive()) {   ui <- fluidPage(     value_box(       value = \"1,000,000\",       text = \"This is the latest value for the selected inputs.\",       colour = \"purple\"     )   )   server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/warning_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Warning Text Function — warning_text","title":"Warning Text Function — warning_text","text":"function create warning text","code":""},{"path":"/reference/warning_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Warning Text Function — warning_text","text":"","code":"warning_text(inputId, text)"},{"path":"/reference/warning_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Warning Text Function — warning_text","text":"inputId input slot used access value. text Text goes main","code":""},{"path":"/reference/warning_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Warning Text Function — warning_text","text":"warning box html shiny object","code":""},{"path":"/reference/warning_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Warning Text Function — warning_text","text":"","code":"if (interactive()) {   ui <- fluidPage(     shinyGovstyle::header(       main_text = \"Example\",       secondary_text = \"User Examples\",       logo=\"shinyGovstyle/images/moj_logo.png\"),     shinyGovstyle::gov_layout(size = \"two-thirds\",       shinyGovstyle::warning_text(         inputId = \"warn1\",         text = \"You can be fined up to £5,000 if you do not register.\")     ),     shinyGovstyle::footer(full = TRUE)   )    server <- function(input, output, session) {}   shinyApp(ui = ui, server = server) }"},{"path":"/reference/word_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Word Count Function — word_count","title":"Word Count Function — word_count","text":"function create tracks word count used text area function","code":""},{"path":"/reference/word_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Word Count Function — word_count","text":"","code":"word_count(inputId, input, word_limit = NULL)"},{"path":"/reference/word_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Word Count Function — word_count","text":"inputId input slot text area want affect input text input associated box. word_limit Change word limit needed.  Default keep used text area component","code":""},{"path":"/reference/word_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Word Count Function — word_count","text":"value returned. Updates word count shiny app","code":""},{"path":"/reference/word_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Word Count Function — word_count","text":"","code":"if (interactive()) {    ui <- shiny::fluidPage(   shinyjs::useShinyjs(),   shinyGovstyle::header(     \"Justice\", \"\", logo=\"shinyGovstyle/images/moj_logo.png\"),   gov_layout(size = \"full\",            text_area_Input(              inputId = \"text_area\",              label = \"Can you provide more detail?\",              hint_label =  \"Do not include personal or financial information                             , like your National Insurance number or credit                             card details.\",              word_limit = 300)   ),   footer(TRUE)   )    server <- function(input, output, session) {   shiny::observeEvent(input$text_area,                word_count(inputId = \"text_area\",                           input = input$text_area                )   )   }   shinyApp(ui = ui, server = server) }"},{"path":[]},{"path":"/news/index.html","id":"shinygovstyle-010","dir":"Changelog","previous_headings":"","what":"shinyGovstyle 0.1.0","title":"shinyGovstyle 0.1.0","text":"CRAN release: 2024-09-12 Update css v5.4.0 made fixes associated . longer requires rem remover step update future changes One major changes css change look functionality accordion. Show/hide works expected now. Another major change radio buttons look feel, line v5.4.0 design examples. Added additional functions run_example ease testing Added contents_links() function helper getting styling behaviour left navigation","code":""},{"path":"/news/index.html","id":"shinygovstyle-008","dir":"Changelog","previous_headings":"","what":"shinyGovstyle 0.0.8","title":"shinyGovstyle 0.0.8","text":"CRAN release: 2022-02-22 Update css v4.0.0 made fixes associated . One major changes css change look accordion. Added new functions gov_main_layout, gov_row, gov_box gov_text give better control layouts. Added tabs component using govTab command Added summary list component using gov_summary command Added error summary component (error_summary) error summary update (error_summary_update)","code":""},{"path":"/news/index.html","id":"shinygovstyle-007","dir":"Changelog","previous_headings":"","what":"shinyGovstyle 0.0.7","title":"shinyGovstyle 0.0.7","text":"CRAN release: 2021-11-04 Improved header can adjust logo size suit Fix errors appeared footer Fix word count function need enter word count limit text_area function. can change limit word_count needed. Change run_example better versions show ways can package. Change backlink_Input button can use server move panels etc. Added tags tag_Input function plus added use_example. Added cookie banner cookieBanner function. Added accordion accordion function. Added tables govTable function.","code":""},{"path":"/news/index.html","id":"shinygovstyle-006","dir":"Changelog","previous_headings":"","what":"shinyGovstyle 0.0.6","title":"shinyGovstyle 0.0.6","text":"CRAN release: 2021-10-25 Fix minor bugs issues list including data default radio default Added units test Added example function Added NEWS.md file track changes package. Added notification banner function Got ready CRAN release. Added output value documentation","code":""}]
